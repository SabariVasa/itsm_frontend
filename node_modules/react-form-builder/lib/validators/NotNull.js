"use strict";

var AbstractValidator,
    NotNullValidator,
    extend = function extend(child, parent) {
  for (var key in parent) {
    if (hasProp.call(parent, key)) child[key] = parent[key];
  }function ctor() {
    this.constructor = child;
  }ctor.prototype = parent.prototype;child.prototype = new ctor();child.__super__ = parent.prototype;return child;
},
    hasProp = ({}).hasOwnProperty;

AbstractValidator = require("./Abstract");

module.exports = NotNullValidator = (function (superClass) {
  extend(NotNullValidator, superClass);

  function NotNullValidator() {
    return NotNullValidator.__super__.constructor.apply(this, arguments);
  }

  NotNullValidator.prototype.validate = function (value, name) {
    return null;
  };

  return NotNullValidator;
})(AbstractValidator);