"use strict";

var DataSourcedMixin, DisableOnSubmitMixin, Input, Matches, React, StandardErrorDisplayMixin, TypeAheadField, TypeAheadMixin, ValidationMixin;

React = require("react");

DataSourcedMixin = require("./mixins/DataSourced");

ValidationMixin = require("./mixins/Validation");

StandardErrorDisplayMixin = require("./mixins/StandardErrorDisplay");

DisableOnSubmitMixin = require("./mixins/DisableOnSubmit");

TypeAheadMixin = require("./TypeAhead/Mixin");

Matches = require("./TypeAhead/Matches");

Input = require("./TypeAhead/Input");

TypeAheadField = React.createClass({
  displayName: "TypeAheadField",

  mixins: [DataSourcedMixin, ValidationMixin, StandardErrorDisplayMixin, DisableOnSubmitMixin, TypeAheadMixin],
  propTypes: {
    displayName: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.bool]),
    dataKey: React.PropTypes.string.isRequired
  },
  getInitialState: function getInitialState() {
    var ref;
    return {
      hiddenList: true,
      highlightedIndex: -1,
      item: (ref = this.props.data) != null ? ref : {},
      options: []
    };
  },
  onChange: function onChange(value) {
    if (value === null) {
      return this.props.onDataChanged(this.props.dataKey, null);
    }
  },
  selectItem: function selectItem(item) {
    var update;
    update = {
      options: [],
      hiddenList: true,
      highlightedIndex: -1,
      item: item
    };
    return this.setState(update, (function (_this) {
      return function () {
        var ref, value;
        value = (ref = item.value) != null ? ref : typeof item === "string" ? item : void 0;
        return _this.props.onDataChanged(_this.props.dataKey, value);
      };
    })(this));
  },
  render: function render() {
    var size;
    size = this.props.displayName === false ? "col-sm-12" : "col-sm-10";
    return React.createElement(
      "div",
      { className: this.errorClasses("form-group", "has-feedback") },
      this.renderLabel(),
      React.createElement(
        "div",
        { className: size },
        React.createElement(
          Input,
          {
            dataKey: this.props.dataKey,
            emptyList: this.state.hiddenList || this.state.options.length == 0,
            item: this.formattedItem(),
            free: this.props.free,
            disabled: this.disabled() || this.state.loadingItem,
            placeholder: this.props.placeholder,
            title: this.props.title,
            loading: this.state.loadingOptions || this.state.loadingItem,
            onChange: this.onChange,
            onFocus: this.onFocus,
            onBlur: this.onBlur,
            onKeyDown: this.onKeyDown,
            onKeyUp: this.onKeyUp
          },
          React.createElement(Matches, {
            ref: "list",
            matches: this.state.options,
            highlightedIndex: this.state.highlightedIndex,
            hidden: this.state.hiddenList,
            onSelect: this.selectItem
          }),
          this.errorSpan()
        )
      )
    );
  }
});

module.exports = TypeAheadField;