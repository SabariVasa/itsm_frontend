"use strict";

var DataSourcedMixin, DataTypeConversionMixin, DisableOnSubmitMixin, DropDownField, HelpMixin, React, StandardErrorDisplayMixin, classnames, each, map;

React = require("react");

classnames = require("classnames");

DataSourcedMixin = require("./mixins/DataSourced");

StandardErrorDisplayMixin = require("./mixins/StandardErrorDisplay");

DisableOnSubmitMixin = require("./mixins/DisableOnSubmit");

DataTypeConversionMixin = require("./mixins/DataTypeConversion");

HelpMixin = require("./mixins/Help");

each = require("lodash/each");

map = require("lodash/map");

DropDownField = React.createClass({
  displayName: "DropDownField",

  mixins: [DataSourcedMixin, DataTypeConversionMixin, StandardErrorDisplayMixin, DisableOnSubmitMixin, HelpMixin],
  propTypes: {
    dataKey: React.PropTypes.string
  },
  onChange: function onChange(event) {
    return this.props.onDataChanged(this.props.dataKey, this.convertDataType(event.target.value));
  },
  render: function render() {
    var classes, label, options, ref, ref1, ref2, size, value;
    value = (ref = this.props.data) != null ? ref : (ref1 = this.state.options) != null ? (ref2 = ref1[0]) != null ? ref2.value : void 0 : void 0;
    classes = {
      "form-control": true
    };
    each(this.props.classes, (function (_this) {
      return function (name) {
        return classes[name] = true;
      };
    })(this));
    options = null;
    if (this.state.options instanceof Array) {
      options = map(this.state.options, (function (_this) {
        return function (option, i) {
          var disabled;
          disabled = option.disabled;
          return React.createElement(
            "option",
            { key: i, value: option.value, disabled: disabled },
            option.displayName
          );
        };
      })(this));
    }
    if (this.props.displayName !== false) {
      label = React.createElement(
        "label",
        { className: "col-sm-2 control-label", htmlFor: this.props.dataKey },
        this.props.displayName
      );
    }
    size = this.props.displayName === false ? "col-sm-12" : "col-sm-10";
    return React.createElement(
      "div",
      { className: this.errorClasses("form-group") },
      label,
      React.createElement(
        "div",
        { className: size },
        React.createElement(
          "select",
          {
            onChange: this.onChange,
            className: classnames(classes),
            name: this.props.dataKey,
            value: value,
            disabled: this.disabled()
          },
          options
        ),
        this.errorSpan(),
        this.helpSpan()
      )
    );
  }
});

module.exports = DropDownField;