"use strict";

var DataTypeConversionMixin, DisableOnSubmitMixin, NestedField, React, ReactBootstrap, ValidationMixin;

React = require("react");

DisableOnSubmitMixin = require("../mixins/DisableOnSubmit");

ValidationMixin = require("../mixins/Validation");

DataTypeConversionMixin = require("../mixins/DataTypeConversion");

ReactBootstrap = require("react-bootstrap");

NestedField = React.createClass({
  displayName: "NestedField",

  mixins: [DisableOnSubmitMixin, ValidationMixin, DataTypeConversionMixin],
  propTypes: {
    type: React.PropTypes.string.isRequired,
    onEnter: React.PropTypes.func,
    onDataChanged: React.PropTypes.func.isRequired,
    onRemove: React.PropTypes.func.isRequired
  },
  onChange: function onChange(event) {
    var value;
    value = event.target.value;
    return this.validate(value, (function (_this) {
      return function () {
        return _this.props.onDataChanged(_this.props.dataKey, _this.convertDataType(value));
      };
    })(this));
  },
  remove: function remove() {
    return this.props.onRemove(this.props.dataKey);
  },
  renderField: function renderField() {
    return React.createElement("input", {
      type: "text",
      className: "form-control",
      name: this.props.dataKey,
      defaultValue: this.props.data,
      onChange: this.onChange,
      disabled: this.props.disabled,
      placeholder: this.props.placeholder,
      title: this.props.title,
      onKeyPress: this.submitOnEnter
    });
  },
  render: function render() {
    return React.createElement(
      "div",
      { className: "row" },
      React.createElement(
        "div",
        { className: "col-md-12" },
        React.createElement(
          "div",
          { className: "input-group" },
          this.renderField(),
          React.createElement(
            "span",
            { className: "input-group-btn" },
            React.createElement(
              ReactBootstrap.Button,
              { onClick: this.remove },
              React.createElement(ReactBootstrap.Glyphicon, { glyph: "remove" })
            )
          )
        )
      )
    );
  }
});

module.exports = NestedField;