"use strict";

var DataSourcedMixin, DataTypeConversionMixin, DisableOnSubmitMixin, HelpMixin, RadioButtons, React, StandardErrorDisplayMixin;

React = require("react");

DataSourcedMixin = require("./mixins/DataSourced");

StandardErrorDisplayMixin = require("./mixins/StandardErrorDisplay");

DisableOnSubmitMixin = require("./mixins/DisableOnSubmit");

HelpMixin = require("./mixins/Help");

DataTypeConversionMixin = require("./mixins/DataTypeConversion");

RadioButtons = React.createClass({
  displayName: "RadioButtons",

  mixins: [DataSourcedMixin, StandardErrorDisplayMixin, DisableOnSubmitMixin, HelpMixin, DataTypeConversionMixin],
  propTypes: {
    displayName: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.bool]),
    dataKey: React.PropTypes.string.isRequired
  },
  onChange: function onChange(event) {
    return this.props.onDataChanged(this.props.dataKey, this.convertDataType(event.target.value));
  },
  renderButtons: function renderButtons() {
    if (this.state.options) {
      return this.state.options.map((function (_this) {
        return function (option) {
          var checked;
          checked = _this.props.data === void 0 ? false : _this.props.data === null ? option.value === null : option.value === _this.props.data;
          return React.createElement(
            "label",
            { className: "radio-inline", key: "radio-" + option.value + "-key" },
            React.createElement("input", {
              type: "radio",
              name: _this.props.dataKey,
              value: option.value,
              onChange: _this.onChange,
              disabled: _this.disabled(),
              placeholder: _this.props.placeholder,
              title: _this.props.title,
              checked: checked,
              key: "radio-" + option.value
            }),
            option.displayName
          );
        };
      })(this));
    }
  },
  render: function render() {
    var label;
    if (this.props.displayName !== false) {
      label = React.createElement(
        "label",
        { className: "col-md-3 col-lg-2 control-label", htmlFor: this.props.dataKey },
        this.props.displayName
      );
    }
    return React.createElement(
      "div",
      { className: this.errorClasses("form-group") },
      label,
      React.createElement(
        "div",
        { className: "col-md-9" },
        this.renderButtons(),
        this.errorSpan(),
        this.helpSpan()
      )
    );
  }
});

module.exports = RadioButtons;