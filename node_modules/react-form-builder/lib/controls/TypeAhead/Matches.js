"use strict";

var Match, Matches, React, classnames, createFragment, isEqual;

React = require("react");

classnames = require("classnames");

isEqual = require("lodash/isEqual");

createFragment = require("react-addons-create-fragment");

Match = require("./Match");

Matches = React.createClass({
  displayName: "Matches",

  propTypes: {
    matches: React.PropTypes.array.isRequired,
    highlightedIndex: React.PropTypes.number.isRequired,
    hidden: React.PropTypes.bool.isRequired,
    onSelect: React.PropTypes.func.isRequired
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    if (!isEqual(this.props, nextProps)) {
      this.resetListScroll();
      if (this.props.highlightedIndex > -1) {
        return this.ensureHighlightedVisible();
      }
    }
  },
  ensureHighlightedVisible: function ensureHighlightedVisible() {
    var highlighted, list;
    list = this.refs.list;
    if (!(list && this.props.highlightedIndex >= 0)) {
      return;
    }
    if (!(highlighted = list.childNodes[this.props.highlightedIndex])) {
      return;
    }
    return list.scrollTop = list.scrollTop + highlighted.offsetTop - list.scrollHeight / 2 + highlighted.offsetHeight / 2;
  },
  resetListScroll: function resetListScroll() {
    var ref;
    return (ref = this.refs.list) != null ? ref.scrollTop = 0 : void 0;
  },
  renderMatchItems: function renderMatchItems() {
    var items;
    items = [];
    this.props.matches.forEach((function (_this) {
      return function (item, i) {
        return items.push(React.createElement(Match, {
          key: i,
          item: item,
          active: _this.props.highlightedIndex === i,
          onSelect: _this.props.onSelect
        }));
      };
    })(this));
    return items;
  },
  className: function className() {
    return classnames({
      "autocomplete-results": true,
      hide: this.props.hidden,
      active: this.props.active
    });
  },
  render: function render() {
    if (this.props.matches.length > 0) {
      return React.createElement(
        "div",
        { className: this.className() },
        React.createElement(
          "ul",
          { ref: "list" },
          this.renderMatchItems()
        )
      );
    } else {
      return React.createElement("div", null);
    }
  }
});

module.exports = Matches;