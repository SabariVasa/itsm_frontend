"use strict";

var Checkbox, DisableOnSubmitMixin, HelpMixin, React, SingleInputMixin, StandardErrorDisplayMixin, omit;

React = require("react");

StandardErrorDisplayMixin = require("./mixins/StandardErrorDisplay");

DisableOnSubmitMixin = require("./mixins/DisableOnSubmit");

HelpMixin = require("./mixins/Help");

SingleInputMixin = require("./mixins/SingleInput");

omit = require("lodash/omit");

Checkbox = React.createClass({
  displayName: "Checkbox",

  mixins: [omit(SingleInputMixin, "propTypes"), StandardErrorDisplayMixin, DisableOnSubmitMixin, HelpMixin],
  propTypes: {
    data: React.PropTypes.oneOfType([React.PropTypes.bool, React.PropTypes.string]),
    dataKey: React.PropTypes.string.isRequired,
    displayName: React.PropTypes.string.isRequired
  },
  onChange: function onChange(event) {
    return this.props.onDataChanged(this.props.dataKey, event.target.checked);
  },
  render: function render() {
    var size;
    size = this.props.displayName === false ? "col-sm-12" : "col-sm-10 col-sm-offset-2";
    return React.createElement(
      "div",
      { className: this.errorClasses("form-group") },
      React.createElement(
        "div",
        { className: size },
        React.createElement(
          "div",
          { className: "checkbox" },
          React.createElement(
            "label",
            { className: "checkbox-inline checkbox-alone" },
            React.createElement("input", {
              type: "checkbox",
              name: this.props.dataKey,
              checked: this.props.data,
              onChange: this.onChange,
              disabled: this.disabled(),
              title: this.props.title
            }),
            this.props.displayName,
            this.errorSpan(),
            this.helpSpan()
          )
        )
      )
    );
  }
});

module.exports = Checkbox;