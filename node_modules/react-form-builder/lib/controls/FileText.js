"use strict";

var DataTypeConversionMixin, DisableOnSubmitMixin, FileTextField, HelpMixin, React, SingleInputMixin, StandardErrorDisplayMixin, UploadImageButton, ValidationMixin;

React = require("react");

SingleInputMixin = require("./mixins/SingleInput");

ValidationMixin = require("./mixins/Validation");

StandardErrorDisplayMixin = require("./mixins/StandardErrorDisplay");

DisableOnSubmitMixin = require("./mixins/DisableOnSubmit");

HelpMixin = require("./mixins/Help");

DataTypeConversionMixin = require("./mixins/DataTypeConversion");

UploadImageButton = require("./Markdown/UploadImageButton");

FileTextField = React.createClass({
  displayName: "FileTextField",

  mixins: [SingleInputMixin, ValidationMixin, StandardErrorDisplayMixin, DisableOnSubmitMixin, HelpMixin, DataTypeConversionMixin],
  propTypes: {
    dataKey: React.PropTypes.string,
    title: React.PropTypes.string,
    placeholder: React.PropTypes.string,
    disabled: React.PropTypes.bool,
    data: React.PropTypes.any
  },
  onChange: function onChange(event) {
    var value;
    value = event.target.value;
    return this.validate(value, (function (_this) {
      return function () {
        return _this.props.onDataChanged(_this.props.dataKey, _this.convertDataType(value));
      };
    })(this));
  },
  setFileUrl: function setFileUrl(markdown) {
    return this.props.onDataChanged(this.props.dataKey, markdown);
  },
  render: function render() {
    var label, size;
    if (this.props.displayName !== false) {
      label = React.createElement(
        "label",
        { className: "col-sm-2 control-label", htmlFor: this.props.dataKey },
        this.props.displayName
      );
    }
    size = this.props.displayName === false ? "col-sm-12" : "col-sm-10";
    return React.createElement(
      "div",
      { className: this.errorClasses("form-group") },
      label,
      React.createElement(
        "div",
        { className: size },
        React.createElement(
          "div",
          { className: "input-group" },
          React.createElement("input", {
            type: "text",
            className: "form-control",
            name: this.props.dataKey,
            value: this.props.data,
            onChange: this.onChange,
            disabled: this.disabled() && this.props.disabled,
            placeholder: this.props.placeholder,
            title: this.props.title,
            onKeyPress: this.submitOnEnter
          }),
          React.createElement(
            "div",
            { className: "input-group-addon" },
            React.createElement(UploadImageButton, {
              fileDestinationService: this.props.fileDestinationService,
              addImageMarkdown: this.setFileUrl
            })
          )
        ),
        this.errorSpan(),
        this.helpSpan()
      )
    );
  }
});

module.exports = FileTextField;