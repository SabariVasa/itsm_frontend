{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\development_loc\\\\itsm_frontend\\\\src\\\\Pages\\\\request\\\\UpdatedRequestForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport GeneratedForm from \"../../Components/cmdb/classmanagement/GeneratedForm\";\nimport GlobalService from \"../../services/GlobalService\";\nimport { resturls } from \"../../global/utils/apiurls\";\nimport { useParams } from \"react-router-dom/cjs/react-router-dom\";\nimport { Box, Modal, Typography } from \"@mui/material\";\nimport ContentDevider from \"../../Components/HelperComponents/ContentDevider\";\nimport CreateRequestUserTable from \"./CreateRequestUserTable\";\nimport { useTheme } from \"../../global/commonComponents/ThemeContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UpdatedRequestForm() {\n  _s();\n  var _requestCreatedFormDe, _requestCreatedFormDe2;\n  const {\n    catelogueId,\n    // categotyId,\n    request_id\n  } = useParams();\n  const {\n    theme\n  } = useTheme();\n  const [formData, setFormData] = useState({\n    requestNumber: \"\",\n    approvalStatus: \"\",\n    openedBy: \"\",\n    requestedFor: \"\",\n    priority: \"\",\n    assignedTo: \"\",\n    dueDate: \"\",\n    openedDate: \"\"\n  });\n  const [requestFormFields, setRequestFormFields] = useState([]);\n  const [requestCreatedFormDetails, setRequestCreatedFormDetails] = useState({});\n  const [selectedOpenedUser, setSelectedOpenedUser] = useState();\n  const [selectedRequestForUser, setSelectedRequestForUser] = useState();\n  const [selectedAssignedUser, setSelectedAssignedUser] = useState();\n  // const [requestCountById, setRequestCountById] = useState(\"\");\n  const [callModal, setCallerModal] = useState(false);\n  const [userSelecterTableModal, setUserSelecterTableModal] = useState();\n  const [requestedFormFieldValue, setRequestedFormFieldValue] = useState();\n  const [generatedFormId, setGeneratedFormId] = useState();\n\n  // const handleDeleteClick = (e) => {\n  // e.stopPropagation();\n  // setOpen(true);\n  // };\n\n  // const handleClose = () => {\n  // setOpen(false);\n  // };\n\n  // const deleteRequestInstance = () => {\n  // GlobalService.generalSelect(\n  // (respData) => {\n  // const { estatus } = respData;\n  // if (estatus) {\n  // history.goBack();\n  // }\n  // },\n  // `${resturls.deleteRequestInstance}/${request_id}`,\n  // {},\n  // \"DELETE\"\n  // );\n  // }\n\n  // const handleConfirmDelete = () => {\n  // deleteRequestInstance();\n  // setOpen(false);\n  // };\n\n  // const getFormFieldsByCategoryId = () => {\n  // GlobalService.generalSelect(\n  // (respData) => {\n  // const { estatus, data } = respData;\n  // if (estatus) {\n  // const foundObject = data?.find(\n  // (item) => item?.generalInformation?.catelogueCatrgory?.id === catelogueId\n  // );\n  // setRequestFormFields(foundObject.generalInformation.attributes);\n  // setRequestCreatedFormDetails(foundObject);\n  // }\n  // },\n  // `${resturls.getByCategory}?categoryId=${catelogueId}`,\n  // {},\n  // \"GET\"\n  // );\n  // };\n\n  // const catalogReqItmCount = () => {\n  // GlobalService.generalSelect(\n  // (respData) => {\n  // const { estatus, data } = respData;\n  // if (estatus) {\n  // setRequestCountById(data);\n  // setFormData((prevData) => ({ ...prevData, requestNumber: data, }));\n  // }\n  // },\n  // `${resturls.catalogReqItmCount}/${categotyId}`,\n  // {},\n  // \"GET\"\n  // );\n  // };\n\n  const handleCloseProfileModal = () => {\n    setCallerModal(false);\n  };\n\n  // const handleInputChange = (e) => {\n  // const { name, value } = e.target;\n  // setFormData((prevData) => ({ ...prevData, [name]: value }));\n  // };\n\n  // const handleDateChange = (name, date) => {\n  // setFormData((prevData) => ({ ...prevData, [name]: date }));\n  // };\n\n  // useEffect(() => {\n  // catalogReqItmCount();\n  // if (catelogueId) {\n  // getFormFieldsByCategoryId();\n  // }\n  // }, [catelogueId]);\n\n  // const handleSubmit = (e) => {\n  // e.preventDefault();\n  // GlobalService.generalSelect((respData) => {\n  // const { estatus } = respData;\n  // if (estatus) {\n  // history.goBack();\n  // }\n  // }, `${resturls.updateRequestInstance}/${request_id}`, formData, \"PUT\");\n  // console.log(\"Form Data Submitted:\", formData);\n  // };\n  // \n  // const handleUSerSelectModal = (modal) => {\n  // setUserSelecterTableModal(modal);\n  // setCallerModal(true)\n  // };\n\n  useEffect(() => {\n    if (request_id) {\n      GlobalService.generalSelect(respData => {\n        const {\n          data,\n          attributes\n        } = respData;\n        if (data) {\n          var _data$generatedReques, _data$generatedReques2, _data$generatedReques3, _data$generatedReques4, _data$generatedReques5, _data$generatedReques6;\n          setFormData({\n            requestNumber: data.generatedRequestFormData.requestNumber || \"\",\n            approvalStatus: data.generatedRequestFormData.approvalStatus || \"\",\n            openedBy: {\n              id: (data === null || data === void 0 ? void 0 : (_data$generatedReques = data.generatedRequestFormData.openedBy) === null || _data$generatedReques === void 0 ? void 0 : _data$generatedReques.id) || \"\",\n              name: (data === null || data === void 0 ? void 0 : (_data$generatedReques2 = data.generatedRequestFormData.openedBy) === null || _data$generatedReques2 === void 0 ? void 0 : _data$generatedReques2.name) || \"\"\n            },\n            requestedFor: {\n              id: (data === null || data === void 0 ? void 0 : (_data$generatedReques3 = data.generatedRequestFormData.requestedFor) === null || _data$generatedReques3 === void 0 ? void 0 : _data$generatedReques3.id) || \"\",\n              name: (data === null || data === void 0 ? void 0 : (_data$generatedReques4 = data.generatedRequestFormData.requestedFor) === null || _data$generatedReques4 === void 0 ? void 0 : _data$generatedReques4.name) || \"\"\n            },\n            priority: data.generatedRequestFormData.priority || \"\",\n            assignedTo: {\n              id: (data === null || data === void 0 ? void 0 : (_data$generatedReques5 = data.generatedRequestFormData.assignedTo) === null || _data$generatedReques5 === void 0 ? void 0 : _data$generatedReques5.id) || \"\",\n              name: (data === null || data === void 0 ? void 0 : (_data$generatedReques6 = data.generatedRequestFormData.assignedTo) === null || _data$generatedReques6 === void 0 ? void 0 : _data$generatedReques6.name) || \"\"\n            },\n            dueDate: data.generatedRequestFormData.dueDate || \"\",\n            openedDate: data.generatedRequestFormData.openedDate || \"\"\n          });\n          setGeneratedFormId(data.generateFormId);\n          setRequestedFormFieldValue(data.value);\n          setRequestFormFields(attributes);\n          setRequestCreatedFormDetails(data);\n        }\n      }, `${resturls.fetchRequestInstance}/${request_id}`, {}, \"GET\");\n    }\n  }, [request_id]);\n  useEffect(() => {\n    if (selectedOpenedUser || selectedRequestForUser || selectedAssignedUser) {\n      setFormData(prevData => ({\n        ...prevData,\n        openedBy: {\n          id: (selectedOpenedUser === null || selectedOpenedUser === void 0 ? void 0 : selectedOpenedUser.id) || \"\",\n          name: (selectedOpenedUser === null || selectedOpenedUser === void 0 ? void 0 : selectedOpenedUser.emailAddress) || \"\"\n        } || {},\n        requestedFor: {\n          id: (selectedRequestForUser === null || selectedRequestForUser === void 0 ? void 0 : selectedRequestForUser.id) || \"\",\n          name: (selectedRequestForUser === null || selectedRequestForUser === void 0 ? void 0 : selectedRequestForUser.emailAddress) || \"\"\n        } || {},\n        assignedTo: {\n          id: (selectedAssignedUser === null || selectedAssignedUser === void 0 ? void 0 : selectedAssignedUser.id) || \"\",\n          name: (selectedAssignedUser === null || selectedAssignedUser === void 0 ? void 0 : selectedAssignedUser.emailAddress) || \"\"\n        }\n      }));\n      setCallerModal(false);\n    }\n  }, [selectedOpenedUser, selectedRequestForUser, selectedAssignedUser]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ContentDevider, {\n      title: request_id ? \"Update Request\" : \"Create Request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-[4vh]\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        clasName: \"flex items-center justify-between p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: `${theme.subHeaderFontColor}`\n          },\n          children: requestCreatedFormDetails === null || requestCreatedFormDetails === void 0 ? void 0 : (_requestCreatedFormDe = requestCreatedFormDetails.generalInformation) === null || _requestCreatedFormDe === void 0 ? void 0 : _requestCreatedFormDe.serviceRequestName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            color: `${theme.subHeaderFontColor}`\n          },\n          children: requestCreatedFormDetails === null || requestCreatedFormDetails === void 0 ? void 0 : (_requestCreatedFormDe2 = requestCreatedFormDetails.generalInformation) === null || _requestCreatedFormDe2 === void 0 ? void 0 : _requestCreatedFormDe2.serviceRequestDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GeneratedForm, {\n        isUpdate: generatedFormId\n        // value={formData}\n        ,\n        formFields: requestFormFields,\n        in: true,\n        catelogueId: catelogueId,\n        requestCreatedFormDetails: requestCreatedFormDetails,\n        requestId: request_id,\n        formData: formData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: callModal,\n      onClose: handleCloseProfileModal,\n      \"aria-labelledby\": \"profile-modal-title\",\n      \"aria-describedby\": \"profile-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          width: 800,\n          height: 450,\n          bgcolor: \"background.paper\",\n          border: \"2px solid #000\",\n          boxShadow: 24,\n          p: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(CreateRequestUserTable, {\n          setSelectedOpenedUser: setSelectedOpenedUser,\n          selectedOpenedUser: selectedOpenedUser,\n          selectedRequestForUser: selectedRequestForUser,\n          setSelectedRequestForUser: setSelectedRequestForUser,\n          selectedAssignedUser: selectedAssignedUser,\n          setSelectedAssignedUser: setSelectedAssignedUser,\n          userSelecterTableModal: userSelecterTableModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(UpdatedRequestForm, \"PIYsEUF5phJgX7Qtrdbfm5Ew+SQ=\", false, function () {\n  return [useParams, useTheme];\n});\n_c = UpdatedRequestForm;\nvar _c;\n$RefreshReg$(_c, \"UpdatedRequestForm\");","map":{"version":3,"names":["React","useEffect","useState","GeneratedForm","GlobalService","resturls","useParams","Box","Modal","Typography","ContentDevider","CreateRequestUserTable","useTheme","jsxDEV","_jsxDEV","Fragment","_Fragment","UpdatedRequestForm","_s","_requestCreatedFormDe","_requestCreatedFormDe2","catelogueId","request_id","theme","formData","setFormData","requestNumber","approvalStatus","openedBy","requestedFor","priority","assignedTo","dueDate","openedDate","requestFormFields","setRequestFormFields","requestCreatedFormDetails","setRequestCreatedFormDetails","selectedOpenedUser","setSelectedOpenedUser","selectedRequestForUser","setSelectedRequestForUser","selectedAssignedUser","setSelectedAssignedUser","callModal","setCallerModal","userSelecterTableModal","setUserSelecterTableModal","requestedFormFieldValue","setRequestedFormFieldValue","generatedFormId","setGeneratedFormId","handleCloseProfileModal","generalSelect","respData","data","attributes","_data$generatedReques","_data$generatedReques2","_data$generatedReques3","_data$generatedReques4","_data$generatedReques5","_data$generatedReques6","generatedRequestFormData","id","name","generateFormId","value","fetchRequestInstance","prevData","emailAddress","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","clasName","style","color","subHeaderFontColor","generalInformation","serviceRequestName","serviceRequestDescription","isUpdate","formFields","in","requestId","open","onClose","sx","position","top","left","transform","width","height","bgcolor","border","boxShadow","p","_c","$RefreshReg$"],"sources":["C:/Users/DELL/development_loc/itsm_frontend/src/Pages/request/UpdatedRequestForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport GeneratedForm from \"../../Components/cmdb/classmanagement/GeneratedForm\";\r\nimport GlobalService from \"../../services/GlobalService\";\r\nimport { resturls } from \"../../global/utils/apiurls\";\r\nimport { useParams } from \"react-router-dom/cjs/react-router-dom\";\r\nimport { Box, Modal, Typography } from \"@mui/material\";\r\nimport ContentDevider from \"../../Components/HelperComponents/ContentDevider\";\r\nimport CreateRequestUserTable from \"./CreateRequestUserTable\";\r\nimport { useTheme } from \"../../global/commonComponents/ThemeContext\";\r\n\r\nexport default function UpdatedRequestForm() {\r\n  const {\r\n    catelogueId,\r\n    // categotyId,\r\n    request_id,\r\n  } = useParams();\r\n  const { theme } = useTheme();\r\n\r\n  const [formData, setFormData] = useState({\r\n    requestNumber: \"\",\r\n    approvalStatus: \"\",\r\n    openedBy: \"\",\r\n    requestedFor: \"\",\r\n    priority: \"\",\r\n    assignedTo: \"\",\r\n    dueDate: \"\",\r\n    openedDate: \"\",\r\n  });\r\n  const [requestFormFields, setRequestFormFields] = useState([]);\r\n  const [requestCreatedFormDetails, setRequestCreatedFormDetails] = useState({});\r\n  const [selectedOpenedUser, setSelectedOpenedUser] = useState();\r\n  const [selectedRequestForUser, setSelectedRequestForUser] = useState();\r\n  const [selectedAssignedUser, setSelectedAssignedUser] = useState();\r\n  // const [requestCountById, setRequestCountById] = useState(\"\");\r\n  const [callModal, setCallerModal] = useState(false);\r\n  const [userSelecterTableModal, setUserSelecterTableModal] = useState();\r\n  const [requestedFormFieldValue, setRequestedFormFieldValue] = useState();\r\n  const [generatedFormId, setGeneratedFormId] = useState();\r\n\r\n  // const handleDeleteClick = (e) => {\r\n  // e.stopPropagation();\r\n  // setOpen(true);\r\n  // };\r\n\r\n  // const handleClose = () => {\r\n  // setOpen(false);\r\n  // };\r\n\r\n  // const deleteRequestInstance = () => {\r\n  // GlobalService.generalSelect(\r\n  // (respData) => {\r\n  // const { estatus } = respData;\r\n  // if (estatus) {\r\n  // history.goBack();\r\n  // }\r\n  // },\r\n  // `${resturls.deleteRequestInstance}/${request_id}`,\r\n  // {},\r\n  // \"DELETE\"\r\n  // );\r\n  // }\r\n\r\n  // const handleConfirmDelete = () => {\r\n  // deleteRequestInstance();\r\n  // setOpen(false);\r\n  // };\r\n\r\n  // const getFormFieldsByCategoryId = () => {\r\n  // GlobalService.generalSelect(\r\n  // (respData) => {\r\n  // const { estatus, data } = respData;\r\n  // if (estatus) {\r\n  // const foundObject = data?.find(\r\n  // (item) => item?.generalInformation?.catelogueCatrgory?.id === catelogueId\r\n  // );\r\n  // setRequestFormFields(foundObject.generalInformation.attributes);\r\n  // setRequestCreatedFormDetails(foundObject);\r\n  // }\r\n  // },\r\n  // `${resturls.getByCategory}?categoryId=${catelogueId}`,\r\n  // {},\r\n  // \"GET\"\r\n  // );\r\n  // };\r\n\r\n  // const catalogReqItmCount = () => {\r\n  // GlobalService.generalSelect(\r\n  // (respData) => {\r\n  // const { estatus, data } = respData;\r\n  // if (estatus) {\r\n  // setRequestCountById(data);\r\n  // setFormData((prevData) => ({ ...prevData, requestNumber: data, }));\r\n  // }\r\n  // },\r\n  // `${resturls.catalogReqItmCount}/${categotyId}`,\r\n  // {},\r\n  // \"GET\"\r\n  // );\r\n  // };\r\n\r\n  const handleCloseProfileModal = () => {\r\n    setCallerModal(false);\r\n  };\r\n\r\n  // const handleInputChange = (e) => {\r\n  // const { name, value } = e.target;\r\n  // setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  // };\r\n\r\n  // const handleDateChange = (name, date) => {\r\n  // setFormData((prevData) => ({ ...prevData, [name]: date }));\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  // catalogReqItmCount();\r\n  // if (catelogueId) {\r\n  // getFormFieldsByCategoryId();\r\n  // }\r\n  // }, [catelogueId]);\r\n\r\n  // const handleSubmit = (e) => {\r\n  // e.preventDefault();\r\n  // GlobalService.generalSelect((respData) => {\r\n  // const { estatus } = respData;\r\n  // if (estatus) {\r\n  // history.goBack();\r\n  // }\r\n  // }, `${resturls.updateRequestInstance}/${request_id}`, formData, \"PUT\");\r\n  // console.log(\"Form Data Submitted:\", formData);\r\n  // };\r\n  // \r\n  // const handleUSerSelectModal = (modal) => {\r\n  // setUserSelecterTableModal(modal);\r\n  // setCallerModal(true)\r\n  // };\r\n\r\n  useEffect(() => {\r\n    if (request_id) {\r\n      GlobalService.generalSelect(\r\n        (respData) => {\r\n          const { data, attributes } = respData;\r\n          if (data) {\r\n            setFormData({\r\n              requestNumber: data.generatedRequestFormData.requestNumber || \"\",\r\n              approvalStatus: data.generatedRequestFormData.approvalStatus || \"\",\r\n              openedBy: {\r\n                id: data?.generatedRequestFormData.openedBy?.id || \"\",\r\n                name: data?.generatedRequestFormData.openedBy?.name || \"\",\r\n              },\r\n              requestedFor: {\r\n                id: data?.generatedRequestFormData.requestedFor?.id || \"\",\r\n                name: data?.generatedRequestFormData.requestedFor?.name || \"\",\r\n              },\r\n              priority: data.generatedRequestFormData.priority || \"\",\r\n              assignedTo: {\r\n                id: data?.generatedRequestFormData.assignedTo?.id || \"\",\r\n                name: data?.generatedRequestFormData.assignedTo?.name || \"\",\r\n              },\r\n              dueDate: data.generatedRequestFormData.dueDate || \"\",\r\n              openedDate: data.generatedRequestFormData.openedDate || \"\",\r\n            });\r\n            setGeneratedFormId(data.generateFormId);\r\n            setRequestedFormFieldValue(data.value)\r\n            setRequestFormFields(attributes);\r\n            setRequestCreatedFormDetails(data);\r\n          }\r\n        },\r\n        `${resturls.fetchRequestInstance}/${request_id}`,\r\n        {},\r\n        \"GET\"\r\n      );\r\n    }\r\n  }, [request_id]);\r\n\r\n  useEffect(() => {\r\n    if (selectedOpenedUser || selectedRequestForUser || selectedAssignedUser) {\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        openedBy: {\r\n          id: selectedOpenedUser?.id || \"\",\r\n          name: selectedOpenedUser?.emailAddress || \"\"\r\n        } || {},\r\n        requestedFor: {\r\n          id: selectedRequestForUser?.id || \"\",\r\n          name: selectedRequestForUser?.emailAddress || \"\"\r\n        } || {},\r\n        assignedTo: {\r\n          id: selectedAssignedUser?.id || \"\",\r\n          name: selectedAssignedUser?.emailAddress || \"\"\r\n        },\r\n      }));\r\n      setCallerModal(false);\r\n    }\r\n  }, [selectedOpenedUser, selectedRequestForUser, selectedAssignedUser]);\r\n\r\n  return (\r\n    <>\r\n      <ContentDevider title={request_id ? \"Update Request\" : \"Create Request\"} />\r\n      <div className=\"p-[4vh]\">\r\n        <Box clasName=\"flex items-center justify-between p-4\">\r\n          <span style={{ color: `${theme.subHeaderFontColor}` }}>\r\n            {requestCreatedFormDetails?.generalInformation?.serviceRequestName}\r\n          </span>\r\n          <Typography style={{ color: `${theme.subHeaderFontColor}` }}>\r\n            {requestCreatedFormDetails?.generalInformation?.serviceRequestDescription}\r\n          </Typography>\r\n        </Box>\r\n        {/* <Formik\r\n          initialValues={formData}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {({ values, errors, touched, handleChange, handleBlur, isSubmitting, setFieldValue }) => (\r\n            <Form onSubmit={handleSubmit}>\r\n              <Grid item xs={12} sx={{ margin: '2em' }}>\r\n                <Box sx={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center', gap: '0.5em' }}>\r\n                  <Button \r\n                  sx={{\r\n                    background: `${theme.btnHoverColor}`,\r\n                    color: `${theme.outerBodyfontColor}`,\r\n                    '&:hover': {\r\n                      backgroundColor: `${theme.btnHoverColor}`,\r\n                    },\r\n                  }}\r\n                  onClick={handleDeleteClick}>\r\n                    Delete\r\n                  </Button>\r\n                  <Button \r\n                  type=\"submit\"\r\n                  sx={{\r\n                    background: `${theme.btnColor}`,\r\n                    color: `${theme.outerBodyfontColor}`,\r\n                    '&:hover': {\r\n                      backgroundColor: `${theme.btnHoverColor}`,\r\n                    },\r\n                  }}\r\n                  >\r\n                    Update\r\n                  </Button>\r\n                </Box>\r\n                <Dialog open={open} onClose={handleClose}>\r\n                  <DialogTitle>Confirm Delete</DialogTitle>\r\n                  <DialogContent>\r\n                    <Typography>\r\n                      Are you sure you want to delete this service request? This action cannot be undone.\r\n                    </Typography>\r\n                  </DialogContent>\r\n                  <DialogActions style={{ justifyContent: \"center\" }}>\r\n                    <Button\r\n                      sx={{\r\n                        background: `${theme.btnColor}`,\r\n                        color: `${theme.outerBodyfontColor}`,\r\n                        '&:hover': {\r\n                          backgroundColor: `${theme.btnHoverColor}`,\r\n                        },\r\n                      }}\r\n                      onClick={handleConfirmDelete}\r\n                    >\r\n                      Yes\r\n                    </Button>\r\n                    <Button\r\n                      sx={{\r\n                        background: `${theme.btnColor}`,\r\n                        color: `${theme.outerBodyfontColor}`,\r\n                        '&:hover': {\r\n                          backgroundColor: `${theme.btnHoverColor}`,\r\n                        },\r\n                      }}\r\n                      onClick={handleClose}\r\n                    >\r\n                      No\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </Grid>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    sx={sharedStyles}\r\n                    name=\"requestNumber\"\r\n                    label=\"Request Number\"\r\n                    value={formData.requestNumber}\r\n                    disabled\r\n                    InputLabelProps={{ shrink: true }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    select\r\n                    sx={sharedStyles}\r\n                    name=\"approvalStatus\"\r\n                    label=\"Status\"\r\n                    value={formData.approvalStatus}\r\n                    onChange={handleInputChange}\r\n                    InputLabelProps={{ shrink: true }}\r\n                  >\r\n                    <MenuItem value=\"Completed\">Completed</MenuItem>\r\n                    <MenuItem value=\"Pending\">Pending</MenuItem>\r\n                    <MenuItem value=\"Inprogress\">Inprogress</MenuItem>\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    sx={{...sharedStyles, height: '4em'}}\r\n                    placeholder=\"Opened By\"\r\n                    label=\"Opened By\"\r\n                    name=\"openedBy\"\r\n                    value={formData.openedBy.name}\r\n                    onChange={handleInputChange}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    InputLabelProps={{ shrink: true }}\r\n                    InputProps={{\r\n                      sx: { height: '4em' },\r\n                      endAdornment: (\r\n                        <IconButton\r\n                          type=\"button\"\r\n                          onClick={() => handleUSerSelectModal('openedBy')}\r\n                          aria-label=\"Search Opened By\"\r\n                        >\r\n                          <SearchIcon />\r\n                        </IconButton>\r\n                      ),\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    sx={{...sharedStyles, height: '4em'}}\r\n                    label=\"Requested For\"\r\n                    placeholder=\"Requested For\"\r\n                    name=\"requestedFor\"\r\n                    InputLabelProps={{ shrink: true }}\r\n                    value={formData.requestedFor.name}\r\n                    onChange={handleInputChange}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    InputProps={{\r\n                      sx: { height: '4em' },\r\n                      endAdornment: (\r\n                        <IconButton\r\n                          type=\"button\"\r\n                          onClick={() => handleUSerSelectModal('requestedFor')}\r\n                          aria-label=\"Search Requested For\"\r\n                        >\r\n                          <SearchIcon />\r\n                        </IconButton>\r\n                      ),\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <TextField\r\n                      fullWidth\r\n                      sx={{ ...sharedStyles, height: 56 }}\r\n                      placeholder=\"Assigned To\"\r\n                      name=\"assignedTo\"\r\n                      label=\"Assigned To\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      value={formData.assignedTo.name}\r\n                      onChange={handleInputChange}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      InputProps={{\r\n                        sx: { height: '4em' },\r\n                        endAdornment: (\r\n                          <IconButton\r\n                            type=\"button\"\r\n                            onClick={() => handleUSerSelectModal('assignedTo')\r\n                            }\r\n                            aria-label=\"Search Assigned To\"\r\n                          >\r\n                            <SearchIcon />\r\n                          </IconButton>\r\n                        ),\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    select\r\n                    sx={sharedStyles}\r\n                    name=\"priority\"\r\n                    label=\"Priority\"\r\n                    value={formData.priority}\r\n                    onChange={handleInputChange}\r\n                    InputLabelProps={{ shrink: true }}\r\n                  >\r\n                    <MenuItem value=\"High\">High</MenuItem>\r\n                    <MenuItem value=\"Medium\">Medium</MenuItem>\r\n                    <MenuItem value=\"Low\">Low</MenuItem>\r\n                  </TextField>\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    sx={sharedStyles}\r\n                    name=\"dueDate\"\r\n                    label=\"Due Date\"\r\n                    type=\"date\"\r\n                    value={formData.dueDate}\r\n                    onChange={(e) => handleDateChange(\"dueDate\", e.target.value)}\r\n                    InputLabelProps={{ shrink: true }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    sx={sharedStyles}\r\n                    name=\"openedDate\"\r\n                    label=\"Opened Date\"\r\n                    type=\"date\"\r\n                    value={formData.openedDate}\r\n                    onChange={(e) => handleDateChange(\"openedDate\", e.target.value)}\r\n                    InputLabelProps={{ shrink: true }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              {console.log(values, 'values')}\r\n            </Form>\r\n          )}\r\n        </Formik> */}\r\n        <GeneratedForm\r\n          isUpdate={generatedFormId}\r\n          // value={formData}\r\n          formFields={requestFormFields}\r\n          in\r\n          catelogueId={catelogueId}\r\n          requestCreatedFormDetails={requestCreatedFormDetails}\r\n          requestId={request_id}\r\n          formData={formData}\r\n        />\r\n      </div>\r\n\r\n      <Modal\r\n        open={callModal}\r\n        onClose={handleCloseProfileModal}\r\n        aria-labelledby=\"profile-modal-title\"\r\n        aria-describedby=\"profile-modal-description\"\r\n      >\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: 800,\r\n            height: 450,\r\n            bgcolor: \"background.paper\",\r\n            border: \"2px solid #000\",\r\n            boxShadow: 24,\r\n            p: 4,\r\n          }}\r\n        >\r\n          <CreateRequestUserTable\r\n            setSelectedOpenedUser={setSelectedOpenedUser}\r\n            selectedOpenedUser={selectedOpenedUser}\r\n            selectedRequestForUser={selectedRequestForUser}\r\n            setSelectedRequestForUser={setSelectedRequestForUser}\r\n            selectedAssignedUser={selectedAssignedUser}\r\n            setSelectedAssignedUser={setSelectedAssignedUser}\r\n            userSelecterTableModal={userSelecterTableModal}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}