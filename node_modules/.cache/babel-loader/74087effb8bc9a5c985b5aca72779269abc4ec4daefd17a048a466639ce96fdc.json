{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\development_loc\\\\itsm_frontend\\\\src\\\\Pages\\\\ADSignin.js\",\n  _s = $RefreshSig$();\nimport { Image } from \"@mui/icons-material\";\nimport { Box, Button, Modal, TextField } from \"@mui/material\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\nimport GlobalService from '../services/GlobalService';\nimport { resturls } from '../global/utils/apiurls';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ADSignin() {\n  _s();\n  const [alreadyLogin, setAlreadyLogin] = useState(false);\n  const validationSchema = Yup.object({\n    username: Yup.string().required('Username is required'),\n    password: Yup.string().required('Password is required').min(8, 'Password must be at least 8 characters')\n  });\n  const ADLoginUser = (values, data) => {\n    GlobalService.generalSelect(respdata => {\n      const {\n        estatus,\n        data,\n        emessage,\n        valid\n      } = respdata;\n      if (estatus) {\n        setAlreadyLogin(true);\n      }\n      console.log(respdata, 'ADLoginUser');\n    }, resturls.getADUser, {\n      emailAddress: values.username,\n      password: values.password,\n      configID: data.id\n    }, 'POST');\n  };\n  const AdLoginAuthentication = value => {\n    GlobalService.generalSelect(respdata => {\n      const {\n        estatus,\n        data,\n        emessage,\n        valid\n      } = respdata;\n      console.log(respdata, 'reqObj');\n      ADLoginUser(value, data);\n    }, resturls.AdLogin, {\n      ldapUrl: \"ldap://teksible.fortiddns.com:389\",\n      baseDn: \"cn=Users,dc=Teksible,dc=com\",\n      userDn: value.username,\n      password: value.password\n    }, 'POST');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: alreadyLogin ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: '/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Modal, {\n      open: true,\n      \"aria-labelledby\": \"profile-modal-title\",\n      \"aria-describedby\": \"profile-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: 450,\n          height: 300,\n          overflowY: 'scroll',\n          bgcolor: '#f0f0f0',\n          border: '2px solid #d1d1d1',\n          borderTopColor: '#ffffff',\n          borderLeftColor: '#ffffff',\n          borderRightColor: '#a6a6a6',\n          borderBottomColor: '#a6a6a6',\n          boxShadow: '4px 4px 8px rgba(0, 0, 0, 0.2)',\n          borderRadius: '8px',\n          p: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginBottom: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: \"./public/adLogo.webp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Active Directory Sign-In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            username: '',\n            password: ''\n          },\n          validationSchema: validationSchema,\n          onSubmit: values => {\n            AdLoginAuthentication(values);\n          },\n          children: ({\n            errors,\n            touched,\n            handleChange,\n            handleBlur\n          }) => /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexDirection: 'column',\n                gap: 2,\n                width: '300px',\n                margin: '0 auto'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                as: TextField,\n                name: \"username\",\n                label: \"Username\",\n                variant: \"outlined\",\n                fullWidth: true,\n                error: touched.username && Boolean(errors.username),\n                helperText: touched.username && errors.username,\n                onChange: handleChange,\n                onBlur: handleBlur\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                as: TextField,\n                name: \"password\",\n                label: \"Password\",\n                type: \"password\",\n                variant: \"outlined\",\n                fullWidth: true,\n                error: touched.password && Boolean(errors.password),\n                helperText: touched.password && errors.password,\n                onChange: handleChange,\n                onBlur: handleBlur\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                fullWidth: true,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(ADSignin, \"t3mJG2iYmqJiefoD1FpxNVoGm+Y=\");\n_c = ADSignin;\nvar _c;\n$RefreshReg$(_c, \"ADSignin\");","map":{"version":3,"names":["Image","Box","Button","Modal","TextField","Formik","Form","Field","ErrorMessage","Yup","React","useState","Redirect","GlobalService","resturls","jsxDEV","_jsxDEV","Fragment","_Fragment","ADSignin","_s","alreadyLogin","setAlreadyLogin","validationSchema","object","username","string","required","password","min","ADLoginUser","values","data","generalSelect","respdata","estatus","emessage","valid","console","log","getADUser","emailAddress","configID","id","AdLoginAuthentication","value","AdLogin","ldapUrl","baseDn","userDn","children","to","fileName","_jsxFileName","lineNumber","columnNumber","open","sx","position","top","left","transform","width","height","overflowY","bgcolor","border","borderTopColor","borderLeftColor","borderRightColor","borderBottomColor","boxShadow","borderRadius","p","style","display","flexDirection","justifyContent","alignItems","marginBottom","src","initialValues","onSubmit","errors","touched","handleChange","handleBlur","gap","margin","as","name","label","variant","fullWidth","error","Boolean","helperText","onChange","onBlur","type","color","_c","$RefreshReg$"],"sources":["C:/Users/DELL/development_loc/itsm_frontend/src/Pages/ADSignin.js"],"sourcesContent":["import { Image } from \"@mui/icons-material\";\r\nimport { Box, Button, Modal, TextField } from \"@mui/material\";\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport GlobalService from '../services/GlobalService';\r\nimport { resturls } from '../global/utils/apiurls';\r\n\r\nexport default function ADSignin() {\r\n  const [alreadyLogin, setAlreadyLogin] = useState(false);\r\n  const validationSchema = Yup.object({\r\n    username: Yup.string()\r\n      .required('Username is required'),\r\n    password: Yup.string()\r\n      .required('Password is required')\r\n      .min(8, 'Password must be at least 8 characters'),\r\n  });\r\n\r\n  const ADLoginUser = (values, data) => {\r\n    GlobalService.generalSelect(\r\n      (respdata) => {\r\n        const {\r\n          estatus, data, emessage, valid\r\n        } = respdata;\r\n        if (estatus) {\r\n          setAlreadyLogin(true);\r\n        }\r\n        console.log(respdata, 'ADLoginUser');\r\n      }, resturls.getADUser,\r\n      {\r\n        emailAddress: values.username,\r\n        password: values.password,\r\n        configID: data.id\r\n      },\r\n      'POST',\r\n    );\r\n  }\r\n\r\n  const AdLoginAuthentication = (value) => {\r\n    GlobalService.generalSelect(\r\n      (respdata) => {\r\n        const {\r\n          estatus, data, emessage, valid\r\n        } = respdata;\r\n        console.log(respdata, 'reqObj');\r\n        ADLoginUser(value, data);\r\n      }, resturls.AdLogin,\r\n      {\r\n        ldapUrl: \"ldap://teksible.fortiddns.com:389\",\r\n        baseDn: \"cn=Users,dc=Teksible,dc=com\",\r\n        userDn: value.username,\r\n        password: value.password\r\n      },\r\n      'POST',\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {alreadyLogin ? (\r\n        <Redirect to={'/'} />\r\n      ) : (\r\n        <Modal\r\n          open\r\n          aria-labelledby=\"profile-modal-title\"\r\n          aria-describedby=\"profile-modal-description\"\r\n        >\r\n          <Box\r\n            sx={{\r\n              position: 'absolute',\r\n              top: '50%',\r\n              left: '50%',\r\n              transform: 'translate(-50%, -50%)',\r\n              width: 450,\r\n              height: 300,\r\n              overflowY: 'scroll',\r\n              bgcolor: '#f0f0f0',\r\n              border: '2px solid #d1d1d1',\r\n              borderTopColor: '#ffffff',\r\n              borderLeftColor: '#ffffff',\r\n              borderRightColor: '#a6a6a6',\r\n              borderBottomColor: '#a6a6a6',\r\n              boxShadow: '4px 4px 8px rgba(0, 0, 0, 0.2)',\r\n              borderRadius: '8px',\r\n              p: 4,\r\n            }}\r\n          >\r\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center', marginBottom: 4 }}>\r\n              <Image src=\"./public/adLogo.webp\" />\r\n              <h3>Active Directory Sign-In</h3>\r\n            </div>\r\n            <Formik\r\n              initialValues={{ username: '', password: '' }}\r\n              validationSchema={validationSchema}\r\n              onSubmit={(values) => {\r\n                AdLoginAuthentication(values);\r\n              }}\r\n            >\r\n              {({ errors, touched, handleChange, handleBlur }) => (\r\n                <Form>\r\n                  <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, width: '300px', margin: '0 auto' }}>\r\n                    <Field\r\n                      as={TextField}\r\n                      name=\"username\"\r\n                      label=\"Username\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      error={touched.username && Boolean(errors.username)}\r\n                      helperText={touched.username && errors.username}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                    <Field\r\n                      as={TextField}\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      error={touched.password && Boolean(errors.password)}\r\n                      helperText={touched.password && errors.password}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      fullWidth\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </Box>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Box>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}