{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\development_loc\\\\itsm_frontend\\\\src\\\\presentation\\\\components\\\\users\\\\UsersListModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport GlobalService from \"../../../services/GlobalService\";\nimport { resturls } from \"../../../global/utils/apiurls\";\nimport { useTheme } from \"../../../global/commonComponents/ThemeContext\";\nimport { Box, Modal, Skeleton } from \"@mui/material\";\nimport { useRearrange } from \"../../hooks/rearrange-header\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const UserListModal = props => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [open, setOpen] = useState(false);\n  const {\n    TriggerElement,\n    onSelect\n  } = props;\n  const {\n    theme\n  } = useTheme();\n  const headers = useMemo(() => {\n    const excludeFields = ['id'];\n    const keys = Object.keys(users[0] || {}).filter(key => !excludeFields.includes(key));\n    const headerkey = {\n      firstName: \"First Name\",\n      lastName: \"Last Name\",\n      emailAddress: \"Email\"\n    };\n    return keys.map(key => {\n      switch (key) {\n        case \"firstName\":\n        case \"lastName\":\n        case \"emailAddress\":\n          return {\n            field: key,\n            headerName: headerkey[key],\n            width: 150\n          };\n        case \"active\":\n          return {\n            field: key,\n            headerName: \"Status\",\n            width: 100,\n            renderCell: params => params.value ? \"Active\" : \"Inactive\"\n          };\n        default:\n          return {\n            field: key,\n            headerName: key.replace(/([a-z])([A-Z])/g, \"$1 $2\").replace(/[_]/g, \" \").toUpperCase(),\n            width: 150\n          };\n      }\n    });\n  }, [users]);\n  const {\n    resultHeaders,\n    ReArrangeController\n  } = useRearrange({\n    headers\n  });\n  const getAllUserDetails = () => {\n    GlobalService.generalSelect(respdata => {\n      const {\n        data\n      } = respdata;\n      setUsers(data);\n      setLoading(false);\n    }, `${resturls.getAllADUsers}/${\"677e75d9ad7e572e204496f9\"}`, {}, \"GET\");\n  };\n  useEffect(() => {\n    getAllUserDetails();\n  }, []);\n  const closeModal = () => setOpen(false);\n  const openModal = () => setOpen(true);\n  const caseHandlers = {\n    onClose: () => closeModal(),\n    onOpen: () => openModal()\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [TriggerElement && /*#__PURE__*/_jsxDEV(TriggerElement, {\n      onClick: openModal,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: closeModal,\n      \"aria-labelledby\": \"profile-modal-title\",\n      \"aria-describedby\": \"profile-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          width: \"85%\",\n          height: 450,\n          bgcolor: \"background.paper\",\n          border: \"2px solid #000\",\n          boxShadow: 24,\n          p: 4\n        },\n        children: loading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"rectangular\",\n          height: 600\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [ReArrangeController, /*#__PURE__*/_jsxDEV(DataGrid, {\n            rows: users,\n            columns: resultHeaders,\n            getRowId: ({\n              emailAddress\n            }) => emailAddress,\n            pageSizeOptions: [10],\n            disableRowSelectionOnClick: true,\n            onCellClick: ({\n              row\n            }) => onSelect(row, caseHandlers),\n            initialState: {\n              pagination: {\n                paginationModel: {\n                  page: 0,\n                  pageSize: 10\n                }\n              }\n            },\n            sx: {\n              '& .MuiDataGrid-columnHeaders': {\n                '& .MuiDataGrid-row--borderBottom': {\n                  background: `${theme.outerBodyColor}`,\n                  color: 'white'\n                }\n              },\n              '& .MuiDataGrid-rowHeader': {\n                background: `${theme.outerBodyColor}`,\n                color: 'white'\n              },\n              '& .MuiDataGrid-row--borderBottom': {\n                borderBottom: '2px solid #cccccc'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(UserListModal, \"k+uAHE1RjdjiS522gSFB4CfOQks=\", false, function () {\n  return [useTheme, useRearrange];\n});\n_c = UserListModal;\nvar _c;\n$RefreshReg$(_c, \"UserListModal\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","DataGrid","GlobalService","resturls","useTheme","Box","Modal","Skeleton","useRearrange","jsxDEV","_jsxDEV","Fragment","_Fragment","UserListModal","props","_s","users","setUsers","loading","setLoading","open","setOpen","TriggerElement","onSelect","theme","headers","excludeFields","keys","Object","filter","key","includes","headerkey","firstName","lastName","emailAddress","map","field","headerName","width","renderCell","params","value","replace","toUpperCase","resultHeaders","ReArrangeController","getAllUserDetails","generalSelect","respdata","data","getAllADUsers","closeModal","openModal","caseHandlers","onClose","onOpen","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","sx","position","top","left","transform","height","bgcolor","border","boxShadow","p","variant","rows","columns","getRowId","pageSizeOptions","disableRowSelectionOnClick","onCellClick","row","initialState","pagination","paginationModel","page","pageSize","background","outerBodyColor","color","borderBottom","_c","$RefreshReg$"],"sources":["C:/Users/DELL/development_loc/itsm_frontend/src/presentation/components/users/UsersListModal.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport GlobalService from \"../../../services/GlobalService\";\r\nimport { resturls } from \"../../../global/utils/apiurls\";\r\nimport { useTheme } from \"../../../global/commonComponents/ThemeContext\";\r\nimport { Box, Modal, Skeleton } from \"@mui/material\";\r\nimport { useRearrange } from \"../../hooks/rearrange-header\";\r\n\r\nexport const UserListModal = (props) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { TriggerElement, onSelect } = props;\r\n  const { theme } = useTheme();\r\n\r\n  const headers = useMemo(() => {\r\n    const excludeFields = ['id']\r\n    const keys = Object.keys(users[0] || {}).filter((key) =>!excludeFields.includes(key));\r\n    const headerkey = {\r\n      firstName: \"First Name\",\r\n      lastName: \"Last Name\",\r\n      emailAddress: \"Email\",\r\n    };\r\n\r\n    return keys.map((key) => {\r\n      switch (key) {\r\n        case \"firstName\":\r\n        case \"lastName\":\r\n        case \"emailAddress\":\r\n          return {\r\n            field: key,\r\n            headerName: headerkey[key],\r\n            width: 150,\r\n          };\r\n        case \"active\":\r\n          return {\r\n            field: key,\r\n            headerName: \"Status\",\r\n            width: 100,\r\n            renderCell: (params) => (params.value ? \"Active\" : \"Inactive\"),\r\n          };\r\n        default:\r\n          return {\r\n            field: key,\r\n            headerName: key\r\n              .replace(/([a-z])([A-Z])/g, \"$1 $2\")\r\n              .replace(/[_]/g, \" \")\r\n              .toUpperCase(),\r\n            width: 150,\r\n          };\r\n      }\r\n    });\r\n  }, [users]);\r\n\r\n  const {resultHeaders, ReArrangeController} = useRearrange({headers});\r\n\r\n\r\n  const getAllUserDetails = () => {\r\n    GlobalService.generalSelect(\r\n      (respdata) => {\r\n        const { data } = respdata;\r\n        setUsers(data);\r\n        setLoading(false);\r\n      },\r\n      `${resturls.getAllADUsers}/${\"677e75d9ad7e572e204496f9\"}`,\r\n      {},\r\n      \"GET\"\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllUserDetails();\r\n  }, []);\r\n\r\n  const closeModal = () => setOpen(false);\r\n  const openModal = () => setOpen(true);\r\n\r\n  const caseHandlers = {\r\n    onClose: () => closeModal(),\r\n    onOpen: () => openModal(),\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {TriggerElement && (\r\n        <TriggerElement onClick={openModal} onClose={closeModal} />\r\n      )}\r\n      <Modal\r\n        open={open}\r\n        onClose={closeModal}\r\n        aria-labelledby=\"profile-modal-title\"\r\n        aria-describedby=\"profile-modal-description\"\r\n      >\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: \"85%\",\r\n            height: 450,\r\n            bgcolor: \"background.paper\",\r\n            border: \"2px solid #000\",\r\n            boxShadow: 24,\r\n            p: 4,\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <Skeleton variant=\"rectangular\" height={600} />\r\n          ) : (\r\n            <>\r\n            {ReArrangeController}\r\n            <DataGrid\r\n              rows={users}  \r\n              columns={resultHeaders}\r\n              getRowId={({ emailAddress }) => emailAddress}\r\n              pageSizeOptions={[10]}\r\n              disableRowSelectionOnClick\r\n              onCellClick={({ row }) => onSelect(row, caseHandlers)}\r\n              initialState={{\r\n                pagination: { paginationModel: { page: 0, pageSize: 10 } },\r\n              }}\r\n              sx={{\r\n                '& .MuiDataGrid-columnHeaders': {\r\n                  '& .MuiDataGrid-row--borderBottom': {\r\n                    background: `${theme.outerBodyColor}`,\r\n                    color: 'white'\r\n                  }\r\n                },\r\n                '& .MuiDataGrid-rowHeader': {\r\n                  background: `${theme.outerBodyColor}`,\r\n                  color: 'white',\r\n                },\r\n                '& .MuiDataGrid-row--borderBottom': {\r\n                  borderBottom: '2px solid #cccccc',\r\n                },\r\n              }}\r\n            />\r\n            </>\r\n          )}\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}