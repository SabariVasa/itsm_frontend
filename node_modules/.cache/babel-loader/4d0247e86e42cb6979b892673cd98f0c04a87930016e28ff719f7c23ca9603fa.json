{"ast":null,"code":"import Axios from \"axios\";\nimport { restbaseurl } from \"./constants\";\nclass RestDataSource {\n  static async SendRequest(method, url, callback, data = {}, urlType = \"api\") {\n    try {\n      const request = await Axios.request({\n        url,\n        method,\n        baseURL: restbaseurl,\n        data,\n        withCredentials: true\n      });\n      const resp = request.data;\n      callback(resp);\n    } catch (err) {\n      console.log(err, \"err\");\n    }\n  }\n  static async GetData(callback, url, data = {}, method = \"GET\", urlType = \"api\") {\n    RestDataSource.SendRequest(method, url, callback, data, urlType);\n  }\n  static async Save(callback, url, data) {\n    RestDataSource.SendRequest(\"post\", url, callback, data);\n  }\n  static async Update(callback, url, data) {\n    RestDataSource.SendRequest(\"put\", `${url}/${data.id}`, callback, data);\n  }\n  static async Delete(callback, url, data) {\n    RestDataSource.SendRequest(\"delete\", `${url}/${data.id}`, callback, data);\n  }\n  static async Put(callback, url, data) {\n    RestDataSource.SendRequest(\"put\", url, callback, data);\n  }\n}\nexport default RestDataSource;","map":{"version":3,"names":["Axios","restbaseurl","RestDataSource","SendRequest","method","url","callback","data","urlType","request","baseURL","withCredentials","resp","err","console","log","GetData","Save","Update","id","Delete","Put"],"sources":["C:/Users/DELL/development_loc/itsm_frontend/src/global/utils/RestDataSource.js"],"sourcesContent":["import Axios from \"axios\";\r\nimport { restbaseurl } from \"./constants\";\r\n\r\nclass RestDataSource {\r\n  static async SendRequest(method, url, callback, data = {}, urlType = \"api\") {\r\n    try {\r\n      const request = await Axios.request({\r\n        url,\r\n        method,\r\n        baseURL: restbaseurl,\r\n        data,\r\n        withCredentials: true,\r\n      });\r\n\r\n      const resp = request.data;\r\n      callback(resp);\r\n    } catch (err) {\r\n      console.log(err, \"err\");\r\n    }\r\n  }\r\n\r\n  static async GetData(\r\n    callback,\r\n    url,\r\n    data = {},\r\n    method = \"GET\",\r\n    urlType = \"api\"\r\n  ) {\r\n    RestDataSource.SendRequest(method, url, callback, data, urlType);\r\n  }\r\n\r\n  static async Save(callback, url, data) {\r\n    RestDataSource.SendRequest(\"post\", url, callback, data);\r\n  }\r\n\r\n  static async Update(callback, url, data) {\r\n    RestDataSource.SendRequest(\"put\", `${url}/${data.id}`, callback, data);\r\n  }\r\n\r\n  static async Delete(callback, url, data) {\r\n    RestDataSource.SendRequest(\"delete\", `${url}/${data.id}`, callback, data);\r\n  }\r\n\r\n  static async Put(callback, url, data) {\r\n    RestDataSource.SendRequest(\"put\", url, callback, data);\r\n  }\r\n}\r\n\r\nexport default RestDataSource;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AAEzC,MAAMC,cAAc,CAAC;EACnB,aAAaC,WAAWA,CAACC,MAAM,EAAEC,GAAG,EAAEC,QAAQ,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAEC,OAAO,GAAG,KAAK,EAAE;IAC1E,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMT,KAAK,CAACS,OAAO,CAAC;QAClCJ,GAAG;QACHD,MAAM;QACNM,OAAO,EAAET,WAAW;QACpBM,IAAI;QACJI,eAAe,EAAE;MACnB,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAGH,OAAO,CAACF,IAAI;MACzBD,QAAQ,CAACM,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,EAAE,KAAK,CAAC;IACzB;EACF;EAEA,aAAaG,OAAOA,CAClBV,QAAQ,EACRD,GAAG,EACHE,IAAI,GAAG,CAAC,CAAC,EACTH,MAAM,GAAG,KAAK,EACdI,OAAO,GAAG,KAAK,EACf;IACAN,cAAc,CAACC,WAAW,CAACC,MAAM,EAAEC,GAAG,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,OAAO,CAAC;EAClE;EAEA,aAAaS,IAAIA,CAACX,QAAQ,EAAED,GAAG,EAAEE,IAAI,EAAE;IACrCL,cAAc,CAACC,WAAW,CAAC,MAAM,EAAEE,GAAG,EAAEC,QAAQ,EAAEC,IAAI,CAAC;EACzD;EAEA,aAAaW,MAAMA,CAACZ,QAAQ,EAAED,GAAG,EAAEE,IAAI,EAAE;IACvCL,cAAc,CAACC,WAAW,CAAC,KAAK,EAAE,GAAGE,GAAG,IAAIE,IAAI,CAACY,EAAE,EAAE,EAAEb,QAAQ,EAAEC,IAAI,CAAC;EACxE;EAEA,aAAaa,MAAMA,CAACd,QAAQ,EAAED,GAAG,EAAEE,IAAI,EAAE;IACvCL,cAAc,CAACC,WAAW,CAAC,QAAQ,EAAE,GAAGE,GAAG,IAAIE,IAAI,CAACY,EAAE,EAAE,EAAEb,QAAQ,EAAEC,IAAI,CAAC;EAC3E;EAEA,aAAac,GAAGA,CAACf,QAAQ,EAAED,GAAG,EAAEE,IAAI,EAAE;IACpCL,cAAc,CAACC,WAAW,CAAC,KAAK,EAAEE,GAAG,EAAEC,QAAQ,EAAEC,IAAI,CAAC;EACxD;AACF;AAEA,eAAeL,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}