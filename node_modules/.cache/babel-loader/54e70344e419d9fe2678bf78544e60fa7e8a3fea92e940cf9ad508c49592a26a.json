{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { loginWithGoogle, signInWithEmailAndPassword } from './thunks';\nconst initialState = {\n  user: null,\n  fetchingUser: false,\n  errorMesg: ''\n};\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setUserInfo: (state, action) => {\n      state.user = action.payload;\n    },\n    authReset: () => {\n      return {\n        ...initialState\n      };\n    },\n    updateInfo: (_, action) => {\n      return {\n        ...initialState,\n        ...action.payload\n      };\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loginWithGoogle.pending, state => {\n      state.fetchingUser = true;\n    });\n    builder.addCase(loginWithGoogle.fulfilled, (state, action) => {\n      state.fetchingUser = false;\n      state.user = action.payload;\n    });\n    builder.addCase(loginWithGoogle.rejected, state => {\n      state.fetchingUser = false;\n      state.user = null;\n    });\n    builder.addCase(signInWithEmailAndPassword.pending, state => {\n      state.fetchingUser = true;\n    });\n    builder.addCase(signInWithEmailAndPassword.fulfilled, (state, action) => {\n      state.fetchingUser = false;\n      state.user = action.payload.user_obj;\n      state.errorMesg = action.payload.errorMesg;\n    });\n    builder.addCase(signInWithEmailAndPassword.rejected, state => {\n      state.fetchingUser = false;\n      state.user = null;\n    });\n  }\n});\nexport const {\n  setUserInfo,\n  authReset,\n  updateInfo\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","loginWithGoogle","signInWithEmailAndPassword","initialState","user","fetchingUser","errorMesg","authSlice","name","reducers","setUserInfo","state","action","payload","authReset","updateInfo","_","extraReducers","builder","addCase","pending","fulfilled","rejected","user_obj","actions","reducer"],"sources":["C:/Users/DELL/development_loc/itsm_frontend/src/application/modules/auth/slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport {\r\n    loginWithGoogle,\r\n    signInWithEmailAndPassword,\r\n} from './thunks';\r\n\r\nconst initialState = {\r\n    user: null,\r\n    fetchingUser: false,\r\n    errorMesg: '',\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        setUserInfo: (state, action) => {\r\n            state.user = action.payload;\r\n        },\r\n        authReset: () => {\r\n            return {\r\n                ...initialState,\r\n            };\r\n        },\r\n        updateInfo: (_, action) => {\r\n            return {\r\n                ...initialState,\r\n                ...action.payload,\r\n            }\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(loginWithGoogle.pending, (state) => {\r\n            state.fetchingUser = true;\r\n        });\r\n\r\n        builder.addCase(loginWithGoogle.fulfilled, (state, action) => {\r\n            state.fetchingUser = false;\r\n            state.user = action.payload;\r\n        });\r\n\r\n        builder.addCase(loginWithGoogle.rejected, (state) => {\r\n            state.fetchingUser = false;\r\n            state.user = null;\r\n        });\r\n\r\n        builder.addCase(signInWithEmailAndPassword.pending, (state) => {\r\n            state.fetchingUser = true;\r\n        });\r\n\r\n        builder.addCase(signInWithEmailAndPassword.fulfilled, (state, action) => {\r\n            state.fetchingUser = false;\r\n            state.user = action.payload.user_obj;\r\n            state.errorMesg = action.payload.errorMesg;\r\n        });\r\n\r\n        builder.addCase(signInWithEmailAndPassword.rejected, (state) => {\r\n            state.fetchingUser = false;\r\n            state.user = null;\r\n        });\r\n    },\r\n});\r\n\r\nexport const { setUserInfo, authReset, updateInfo } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SACIC,eAAe,EACfC,0BAA0B,QACvB,UAAU;AAEjB,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,IAAI;EACVC,YAAY,EAAE,KAAK;EACnBC,SAAS,EAAE;AACf,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGP,WAAW,CAAC;EACjCQ,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACNC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACP,IAAI,GAAGQ,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDC,SAAS,EAAEA,CAAA,KAAM;MACb,OAAO;QACH,GAAGX;MACP,CAAC;IACL,CAAC;IACDY,UAAU,EAAEA,CAACC,CAAC,EAAEJ,MAAM,KAAK;MACvB,OAAO;QACH,GAAGT,YAAY;QACf,GAAGS,MAAM,CAACC;MACd,CAAC;IACL;EACJ,CAAC;EACDI,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAAClB,eAAe,CAACmB,OAAO,EAAGT,KAAK,IAAK;MAChDA,KAAK,CAACN,YAAY,GAAG,IAAI;IAC7B,CAAC,CAAC;IAEFa,OAAO,CAACC,OAAO,CAAClB,eAAe,CAACoB,SAAS,EAAE,CAACV,KAAK,EAAEC,MAAM,KAAK;MAC1DD,KAAK,CAACN,YAAY,GAAG,KAAK;MAC1BM,KAAK,CAACP,IAAI,GAAGQ,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC;IAEFK,OAAO,CAACC,OAAO,CAAClB,eAAe,CAACqB,QAAQ,EAAGX,KAAK,IAAK;MACjDA,KAAK,CAACN,YAAY,GAAG,KAAK;MAC1BM,KAAK,CAACP,IAAI,GAAG,IAAI;IACrB,CAAC,CAAC;IAEFc,OAAO,CAACC,OAAO,CAACjB,0BAA0B,CAACkB,OAAO,EAAGT,KAAK,IAAK;MAC3DA,KAAK,CAACN,YAAY,GAAG,IAAI;IAC7B,CAAC,CAAC;IAEFa,OAAO,CAACC,OAAO,CAACjB,0BAA0B,CAACmB,SAAS,EAAE,CAACV,KAAK,EAAEC,MAAM,KAAK;MACrED,KAAK,CAACN,YAAY,GAAG,KAAK;MAC1BM,KAAK,CAACP,IAAI,GAAGQ,MAAM,CAACC,OAAO,CAACU,QAAQ;MACpCZ,KAAK,CAACL,SAAS,GAAGM,MAAM,CAACC,OAAO,CAACP,SAAS;IAC9C,CAAC,CAAC;IAEFY,OAAO,CAACC,OAAO,CAACjB,0BAA0B,CAACoB,QAAQ,EAAGX,KAAK,IAAK;MAC5DA,KAAK,CAACN,YAAY,GAAG,KAAK;MAC1BM,KAAK,CAACP,IAAI,GAAG,IAAI;IACrB,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEM,WAAW;EAAEI,SAAS;EAAEC;AAAW,CAAC,GAAGR,SAAS,CAACiB,OAAO;AAEvE,eAAejB,SAAS,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}