{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\development_loc\\\\itsm_frontend\\\\src\\\\Components\\\\HelperComponents\\\\IncrementContainer.js\";\nimport * as React from 'react';\nimport { TextField, ThemeProvider, createTheme } from '@mui/material';\nimport { styled } from '@mui/system';\n\n// Create a custom theme with primary colors\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#0072E5' // Primary color for focus\n    },\n    text: {\n      primary: '#1C2025',\n      // Primary text color\n      secondary: '#8c8c8c' // Grey color for default text\n    },\n    grey: {\n      300: '#C7D0DD' // Grey color for border\n    }\n  }\n});\nconst NumberInputIntroduction = props => {\n  // const [value, setValue] = React.useState(props.value || '');\n\n  const handleChange = event => {\n    const newValue = event.target.value;\n\n    // Update the state only if the value is empty or a valid number\n    if (newValue === '' || !isNaN(Number(newValue))) {\n      // props.setValue(newValue);\n      props.setValue(newValue); // Update parent component if needed\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(StyledTextField, {\n      label: props.title // Pass the label prop\n      ,\n      variant: \"outlined\",\n      type: \"number\",\n      value: props.value,\n      onChange: handleChange,\n      style: props.style\n      // InputProps={{\n      //   endAdornment: (\n      //     <ButtonContainer>\n      //       <StyledButton onClick={() => setValue(value + (props.step || 1))}>▴</StyledButton>\n      //       <StyledButton onClick={() => setValue(value - (props.step || 1))}>▾</StyledButton>\n      //     </ButtonContainer>\n      //   ),\n      // }}\n      ,\n      inputProps: {\n        min: props.min,\n        max: props.max,\n        step: props.step\n      }\n      // placeholder={props.title}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c = NumberInputIntroduction;\nexport default NumberInputIntroduction;\nconst StyledTextField = styled(TextField)(({\n  theme\n}) => ({\n  '& .MuiInputLabel-root': {\n    color: theme.palette.text.secondary,\n    transform: 'translate(14px, 18px) scale(1)',\n    top: 0,\n    left: 0,\n    transition: 'transform 0.2s, color 0.2s'\n  },\n  '& .MuiInputLabel-shrink': {\n    transform: 'translate(14px, -6px) scale(0.75)',\n    color: theme.palette.primary.main\n  },\n  '& .MuiOutlinedInput-root': {\n    padding: '1px 0',\n    '& fieldset': {\n      borderColor: theme.palette.grey[300]\n    },\n    '&:hover fieldset': {\n      borderColor: theme.palette.primary.main\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: theme.palette.primary.main\n    }\n  }\n}));\n_c2 = StyledTextField;\nconst ButtonContainer = styled('div')({\n  display: 'flex',\n  flexDirection: 'column'\n});\nconst StyledButton = styled('button')({\n  border: 'none',\n  background: 'none',\n  cursor: 'pointer',\n  fontSize: '1rem',\n  padding: '0',\n  lineHeight: '1'\n});\nvar _c, _c2;\n$RefreshReg$(_c, \"NumberInputIntroduction\");\n$RefreshReg$(_c2, \"StyledTextField\");","map":{"version":3,"names":["React","TextField","ThemeProvider","createTheme","styled","jsxDEV","_jsxDEV","theme","palette","primary","main","text","secondary","grey","NumberInputIntroduction","props","handleChange","event","newValue","target","value","isNaN","Number","setValue","children","StyledTextField","label","title","variant","type","onChange","style","inputProps","min","max","step","fileName","_jsxFileName","lineNumber","columnNumber","_c","color","transform","top","left","transition","padding","borderColor","_c2","ButtonContainer","display","flexDirection","StyledButton","border","background","cursor","fontSize","lineHeight","$RefreshReg$"],"sources":["C:/Users/DELL/development_loc/itsm_frontend/src/Components/HelperComponents/IncrementContainer.js"],"sourcesContent":["import * as React from 'react';\r\nimport { TextField, ThemeProvider, createTheme } from '@mui/material';\r\nimport { styled } from '@mui/system';\r\n\r\n// Create a custom theme with primary colors\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#0072E5', // Primary color for focus\r\n    },\r\n    text: {\r\n      primary: '#1C2025', // Primary text color\r\n      secondary: '#8c8c8c', // Grey color for default text\r\n    },\r\n    grey: {\r\n      300: '#C7D0DD', // Grey color for border\r\n    },\r\n  },\r\n}); \r\n\r\nconst NumberInputIntroduction = (props) => {\r\n  // const [value, setValue] = React.useState(props.value || '');\r\n\r\n  const handleChange = (event) => {\r\n    const newValue = event.target.value;\r\n\r\n    // Update the state only if the value is empty or a valid number\r\n    if (newValue === '' || !isNaN(Number(newValue))) {\r\n      // props.setValue(newValue);\r\n      props.setValue(newValue); // Update parent component if needed\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <StyledTextField\r\n        label={props.title} // Pass the label prop\r\n        variant=\"outlined\"\r\n        type=\"number\"\r\n        value={props.value}\r\n        onChange={handleChange}\r\n        style={props.style} \r\n        // InputProps={{\r\n        //   endAdornment: (\r\n        //     <ButtonContainer>\r\n        //       <StyledButton onClick={() => setValue(value + (props.step || 1))}>▴</StyledButton>\r\n        //       <StyledButton onClick={() => setValue(value - (props.step || 1))}>▾</StyledButton>\r\n        //     </ButtonContainer>\r\n        //   ),\r\n        // }}\r\n        inputProps={{\r\n          min: props.min,\r\n          max: props.max,\r\n          step: props.step,\r\n        }}\r\n        // placeholder={props.title}\r\n      />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default NumberInputIntroduction;\r\n\r\nconst StyledTextField = styled(TextField)(({ theme }) => ({\r\n  '& .MuiInputLabel-root': {\r\n    color: theme.palette.text.secondary,\r\n    transform: 'translate(14px, 18px) scale(1)',\r\n    top: 0,\r\n    left: 0,\r\n    transition: 'transform 0.2s, color 0.2s',\r\n  },\r\n  '& .MuiInputLabel-shrink': {\r\n    transform: 'translate(14px, -6px) scale(0.75)',\r\n    color: theme.palette.primary.main,\r\n  },\r\n  '& .MuiOutlinedInput-root': {\r\n    padding: '1px 0',\r\n    '& fieldset': {\r\n      borderColor: theme.palette.grey[300],\r\n    },\r\n    '&:hover fieldset': {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n    '&.Mui-focused fieldset': {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}));\r\n\r\nconst ButtonContainer = styled('div')({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n});\r\n\r\nconst StyledButton = styled('button')({\r\n  border: 'none',\r\n  background: 'none',\r\n  cursor: 'pointer',\r\n  fontSize: '1rem',\r\n  padding: '0',\r\n  lineHeight: '1',\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}