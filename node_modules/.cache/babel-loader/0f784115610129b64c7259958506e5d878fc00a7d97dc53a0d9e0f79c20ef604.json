{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\development_loc\\\\itsm_frontend\\\\src\\\\Components\\\\cmdb\\\\classmanagement\\\\CreateNewClassFormCreation.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { withTranslation } from \"react-i18next\";\nimport { Formik, Form } from \"formik\";\nimport { TextField, MenuItem, Button, FormControl, InputLabel, Grid, IconButton, FormControlLabel, Checkbox } from \"@mui/material\";\nimport * as Yup from 'yup';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport RemoveCircleIcon from '@mui/icons-material/RemoveCircle';\nimport GeneratedForm from \"./GeneratedForm\";\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport ContentDevider from \"../../HelperComponents/ContentDevider\";\nimport { sharedStyles } from \"../../../commonComponents/StyledComponents\";\nimport { useTheme } from \"../../../global/commonComponents/ThemeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateNewClassFormCreation(props) {\n  _s();\n  const {\n    t,\n    selectCategoryType,\n    setCreateMainClassForm,\n    logo,\n    header\n  } = props;\n  const [formFields, setFormFields] = useState([]);\n  const [selectOptions, setSelectOptions] = useState([]);\n  const [fileFormats, setFileFormats] = useState([]);\n  const {\n    theme\n  } = useTheme();\n  const validationSchema = Yup.object({\n    fieldName: Yup.string().required('Field Name is required'),\n    fieldType: Yup.string().required('Field Type is required')\n  });\n  const fieldTypeOptions = ['Text', 'Number', 'Upload', 'Password', 'Email', 'Select', 'Date', 'Boolean'];\n  const fileFormatOptions = ['Image', 'Excel', 'PDF', 'All'];\n  const addSelectOption = () => {\n    setSelectOptions([...selectOptions, '']);\n  };\n  const removeSelectOption = index => {\n    setSelectOptions(selectOptions.filter((_, i) => i !== index));\n  };\n  const handleSelectOptionChange = (index, value) => {\n    const newOptions = [...selectOptions];\n    newOptions[index] = value;\n    setSelectOptions(newOptions);\n  };\n  console.log(formFields, 'formFields');\n  const handleFileFormatChange = event => {\n    setFileFormats(event.target.value);\n  };\n  const handleSubmit = (values, {\n    setSubmitting,\n    resetForm\n  }) => {\n    console.log(values, fileFormats, 'values');\n    const newField = {\n      ...values\n    };\n    if (values.fieldType === 'Select') {\n      newField.optionList = selectOptions;\n    }\n    if (values.fieldType === 'Upload') {\n      newField.fileFormats = fileFormats;\n    }\n    setFormFields([...formFields, newField]);\n    resetForm();\n    setSelectOptions([]);\n    setFileFormats([]);\n    setSubmitting(false);\n    console.log('Form Data to submit:', formFields);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"2em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          marginBottom: \"2em\",\n          gap: \"1em\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n          sx: {\n            color: `${theme.valueFontColor}`\n          },\n          onClick: () => setCreateMainClassForm(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContentDevider, {\n          title: t(\"item_form_creation\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          fieldName: \"\",\n          fieldType: \"\",\n          requiredField: false\n        },\n        validationSchema: validationSchema,\n        onSubmit: handleSubmit,\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          isSubmitting,\n          setFieldValue\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                sx: sharedStyles,\n                label: \"Field Name\",\n                name: \"fieldName\",\n                fullWidth: true,\n                onChange: handleChange,\n                onBlur: handleBlur,\n                value: values.fieldName,\n                helperText: touched.fieldName && errors.fieldName,\n                error: touched.fieldName && Boolean(errors.fieldName)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  select: true,\n                  sx: sharedStyles,\n                  labelId: \"field-type-label\",\n                  label: \"Field Type\",\n                  name: \"fieldType\",\n                  value: values.fieldType,\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  error: touched.fieldType && Boolean(errors.fieldType),\n                  children: fieldTypeOptions.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: option,\n                    children: option\n                  }, option, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                component: \"fieldset\",\n                fullWidth: true,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    gap: \"10px\",\n                    borderRadius: \"1em\",\n                    // Rounded corners\n                    padding: \"10px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      name: \"requiredField\",\n                      checked: values.requiredField // Bind to the `requiredField` value\n                      ,\n                      onChange: event => setFieldValue(\"requiredField\", event.target.checked) // Update Formik value\n                      ,\n                      sx: {\n                        color: \"#ff7eb3\",\n                        \"&.Mui-checked\": {\n                          color: `${theme.valueFontColor}` // Active checkbox color\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 27\n                    }, this),\n                    label: \"Required Field\",\n                    sx: {\n                      color: `${theme.valueFontColor}` // Pink text color\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), values.fieldType === \"Select\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Add Options for Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this), selectOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                alignItems: \"center\",\n                marginBottom: \"10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                sx: sharedStyles,\n                label: `Option ${index + 1}`,\n                value: option,\n                onChange: e => handleSelectOptionChange(index, e.target.value),\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => removeSelectOption(index),\n                color: \"secondary\",\n                children: /*#__PURE__*/_jsxDEV(RemoveCircleIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: addSelectOption,\n              startIcon: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 32\n              }, this),\n              children: \"Add Option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this), values.fieldType === \"Upload\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Select File Formats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"file-format-label\",\n                children: \"File Formats\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                select: true,\n                sx: sharedStyles,\n                label: \"File Format\",\n                labelId: \"file-format-label\",\n                multiple: true,\n                value: fileFormats,\n                onChange: handleFileFormatChange,\n                children: fileFormatOptions.map(format => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: format,\n                  children: format\n                }, format, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              sx: {\n                background: `${theme.outerBodyColor}`\n              },\n              disabled: isSubmitting,\n              children: \"Add Field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentDevider, {\n      title: \"Generated Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GeneratedForm, {\n      formFields: formFields,\n      setFormFields: setFormFields,\n      selectCategoryType: selectCategoryType,\n      logo: logo,\n      className: header,\n      generatedForm: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateNewClassFormCreation, \"qfd95eWnWJNvSW+3xigVaGjE8Zk=\", false, function () {\n  return [useTheme];\n});\n_c = CreateNewClassFormCreation;\nexport default withTranslation('common')(CreateNewClassFormCreation);\nvar _c;\n$RefreshReg$(_c, \"CreateNewClassFormCreation\");","map":{"version":3,"names":["React","useState","withTranslation","Formik","Form","TextField","MenuItem","Button","FormControl","InputLabel","Grid","IconButton","FormControlLabel","Checkbox","Yup","AddCircleIcon","RemoveCircleIcon","GeneratedForm","ArrowBackIcon","ContentDevider","sharedStyles","useTheme","jsxDEV","_jsxDEV","CreateNewClassFormCreation","props","_s","t","selectCategoryType","setCreateMainClassForm","logo","header","formFields","setFormFields","selectOptions","setSelectOptions","fileFormats","setFileFormats","theme","validationSchema","object","fieldName","string","required","fieldType","fieldTypeOptions","fileFormatOptions","addSelectOption","removeSelectOption","index","filter","_","i","handleSelectOptionChange","value","newOptions","console","log","handleFileFormatChange","event","target","handleSubmit","values","setSubmitting","resetForm","newField","optionList","children","style","marginBottom","display","gap","sx","color","valueFontColor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","title","initialValues","requiredField","onSubmit","errors","touched","handleChange","handleBlur","isSubmitting","setFieldValue","container","spacing","item","xs","label","name","fullWidth","onChange","onBlur","helperText","error","Boolean","select","labelId","map","option","component","flexDirection","borderRadius","padding","control","checked","alignItems","e","variant","startIcon","id","multiple","format","marginTop","type","background","outerBodyColor","disabled","className","generatedForm","_c","$RefreshReg$"],"sources":["C:/Users/DELL/development_loc/itsm_frontend/src/Components/cmdb/classmanagement/CreateNewClassFormCreation.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { Formik, Form } from \"formik\";\r\nimport {\r\n  TextField,\r\n  MenuItem,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Grid,\r\n  IconButton,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@mui/material\";\r\nimport * as Yup from 'yup';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport RemoveCircleIcon from '@mui/icons-material/RemoveCircle';\r\nimport GeneratedForm from \"./GeneratedForm\";\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport ContentDevider from \"../../HelperComponents/ContentDevider\";\r\nimport { sharedStyles } from \"../../../commonComponents/StyledComponents\";\r\nimport { useTheme } from \"../../../global/commonComponents/ThemeContext\";\r\n\r\nfunction CreateNewClassFormCreation(props) {\r\n  const { t, selectCategoryType, setCreateMainClassForm, logo, header } = props;\r\n  const [formFields, setFormFields] = useState([]);\r\n  const [selectOptions, setSelectOptions] = useState([]);\r\n  const [fileFormats, setFileFormats] = useState([]);\r\n\r\n  const {theme} = useTheme();\r\n\r\n  const validationSchema = Yup.object({\r\n    fieldName: Yup.string().required('Field Name is required'),\r\n    fieldType: Yup.string().required('Field Type is required'),\r\n  });\r\n\r\n  const fieldTypeOptions = ['Text', 'Number', 'Upload', 'Password', 'Email', 'Select', 'Date', 'Boolean'];\r\n\r\n  const fileFormatOptions = ['Image', 'Excel', 'PDF', 'All'];\r\n  const addSelectOption = () => {\r\n    setSelectOptions([...selectOptions, '']);\r\n  };\r\n\r\n  const removeSelectOption = (index) => {\r\n    setSelectOptions(selectOptions.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleSelectOptionChange = (index, value) => {\r\n    const newOptions = [...selectOptions];\r\n    newOptions[index] = value;\r\n    setSelectOptions(newOptions);\r\n  };\r\n  console.log(formFields, 'formFields');\r\n  const handleFileFormatChange = (event) => {\r\n    setFileFormats(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (values, { setSubmitting, resetForm }) => {\r\n    console.log(values, fileFormats, 'values');\r\n    const newField = { ...values };\r\n\r\n    if (values.fieldType === 'Select') {\r\n      newField.optionList = selectOptions;\r\n    }\r\n\r\n    if (values.fieldType === 'Upload') {\r\n      newField.fileFormats = fileFormats;\r\n    }\r\n\r\n    setFormFields([...formFields, newField]);\r\n    resetForm();\r\n    setSelectOptions([]);\r\n    setFileFormats([]);\r\n    setSubmitting(false);\r\n    console.log('Form Data to submit:', formFields);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: \"2em\" }}>\r\n        <div style={{ display: \"flex\", marginBottom: \"2em\", gap: \"1em\" }}>\r\n          <ArrowBackIcon\r\n            sx={{ color: `${theme.valueFontColor}` }}\r\n            onClick={() => setCreateMainClassForm(false)}\r\n          />\r\n          <ContentDevider title={t(\"item_form_creation\")} />\r\n        </div>\r\n        <Formik\r\n          initialValues={{\r\n            fieldName: \"\",\r\n            fieldType: \"\",\r\n            requiredField: false,\r\n          }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            isSubmitting,\r\n            setFieldValue,\r\n          }) => (\r\n            <Form>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    sx={sharedStyles}\r\n                    label=\"Field Name\"\r\n                    name=\"fieldName\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.fieldName}\r\n                    helperText={touched.fieldName && errors.fieldName}\r\n                    error={touched.fieldName && Boolean(errors.fieldName)}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                  <FormControl fullWidth>\r\n                    {/* <InputLabel id=\"field-type-label\">Field Type</InputLabel> */}\r\n                    <TextField\r\n                      select\r\n                      sx={sharedStyles}\r\n                      labelId=\"field-type-label\"\r\n                      label=\"Field Type\"\r\n                      name=\"fieldType\"\r\n                      value={values.fieldType}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={touched.fieldType && Boolean(errors.fieldType)}\r\n                    >\r\n                      {fieldTypeOptions.map((option) => (\r\n                        <MenuItem key={option} value={option}>\r\n                          {option}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <FormControl component=\"fieldset\" fullWidth>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        gap: \"10px\",\r\n                        borderRadius: \"1em\", // Rounded corners\r\n                        padding: \"10px\",\r\n                      }}\r\n                    >\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            name=\"requiredField\"\r\n                            checked={values.requiredField} // Bind to the `requiredField` value\r\n                            onChange={(event) =>\r\n                              setFieldValue(\r\n                                \"requiredField\",\r\n                                event.target.checked\r\n                              )\r\n                            } // Update Formik value\r\n                            sx={{\r\n                              color: \"#ff7eb3\",\r\n                              \"&.Mui-checked\": {\r\n                                color: `${theme.valueFontColor}`, // Active checkbox color\r\n                              },\r\n                            }}\r\n                          />\r\n                        }\r\n                        label=\"Required Field\"\r\n                        sx={{\r\n                          color: `${theme.valueFontColor}`, // Pink text color\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {values.fieldType === \"Select\" && (\r\n                <div>\r\n                  <h4>Add Options for Select</h4>\r\n                  {selectOptions.map((option, index) => (\r\n                    <div\r\n                      key={index}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        marginBottom: \"10px\",\r\n                      }}\r\n                    >\r\n                      <TextField\r\n                        sx={sharedStyles}\r\n                        label={`Option ${index + 1}`}\r\n                        value={option}\r\n                        onChange={(e) =>\r\n                          handleSelectOptionChange(index, e.target.value)\r\n                        }\r\n                        fullWidth\r\n                      />\r\n                      <IconButton\r\n                        onClick={() => removeSelectOption(index)}\r\n                        color=\"secondary\"\r\n                      >\r\n                        <RemoveCircleIcon />\r\n                      </IconButton>\r\n                    </div>\r\n                  ))}\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    onClick={addSelectOption}\r\n                    startIcon={<AddCircleIcon />}\r\n                  >\r\n                    Add Option\r\n                  </Button>\r\n                </div>\r\n              )}\r\n\r\n              {values.fieldType === \"Upload\" && (\r\n                <div>\r\n                  <h4>Select File Formats</h4>\r\n                  <FormControl>\r\n                    <InputLabel id=\"file-format-label\">File Formats</InputLabel>\r\n                    <TextField\r\n                      select\r\n                      sx={sharedStyles}\r\n                      label=\"File Format\"\r\n                      labelId=\"file-format-label\"\r\n                      multiple\r\n                      value={fileFormats}\r\n                      onChange={handleFileFormatChange}\r\n                    >\r\n                      {fileFormatOptions.map((format) => (\r\n                        <MenuItem key={format} value={format}>\r\n                          {format}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  </FormControl>\r\n                </div>\r\n              )}\r\n\r\n              <div style={{ marginTop: \"20px\" }}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  sx={{ background: `${theme.outerBodyColor}` }}\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Add Field\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n      <ContentDevider title=\"Generated Form\" />\r\n      <GeneratedForm\r\n        formFields={formFields}\r\n        setFormFields={setFormFields}\r\n        selectCategoryType={selectCategoryType}\r\n        logo={logo}\r\n        className={header}\r\n        generatedForm={true}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withTranslation('common')(CreateNewClassFormCreation);\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}