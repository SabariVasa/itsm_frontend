{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\development_loc\\\\itsm_frontend\\\\src\\\\Components\\\\KnowledgeArticle\\\\CreateKnowledge.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useMemo } from 'react';\nimport CmdbGridContainer from '../HelperComponents/GridContainer';\n// import ContentDevider from '../HelperComponents/ContentDevider';\nimport { Button, Grid } from '@mui/material';\nimport { OrgOptions } from '../../Utils/CMDB-Data/CIData';\n// import { approvedData } from '../../Utils/Request Data/RequestItemData';\nimport CmdbTextField from '../HelperComponents/TextField';\n// import { createMuiTheme } from '@mui/material/styles'\n// import { RequestContext } from '../../Routes/HomeRouter';\n// import MUIRichTextEditor from 'mui-rte'\n// import {convertToRaw} from 'draft-js';\nimport JoditEditor from 'jodit-react';\n// import { Link, useNavigate, useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { serverAPI } from '../../Utils/Server';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport { styled } from '@mui/material/styles';\n// import { Preview } from '@mui/icons-material';\nimport NotifyBar from '../Notification Components/NotifyBar';\n// import KnowledgeList from './KnowledgeList';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setKnowledgeContent } from '../../Redux state management/Redux Slices/KnowledgeDataSlice';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport { useRouteMatch } from 'react-router-dom/cjs/react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateKnowledge({\n  placeholder\n}) {\n  _s();\n  // const{articleID} = useParams();\n  const navigate = useHistory();\n  const {\n    path\n  } = useRouteMatch();\n  const handleCellClick = params => {\n    const updatedPath = path.replace('knowledge-creation', '');\n    navigate.push(`${updatedPath}created-knowledge-preview`);\n  };\n  // const{knowledgeContent,setknowledgeContent}=useContext(RequestContext);\n  const [articleNumber, setArticleNumber] = useState(\"\");\n  const [articleType, setArticleType] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [shortDescription, setShortDescription] = useState(\"\");\n  const [articleContent, setArticleContent] = useState(\"\");\n  const [image, setImage] = useState();\n  const [PreviewImage, setPreviewImage] = useState();\n  const [error, setError] = useState(false);\n  const [notifyStatus, setNotifyStatus] = useState(false);\n  const [notifyMessage, setNotifyMessage] = useState(\"\");\n\n  // const [searchParams, setSearchParams] = useState();\n  // const knowledgeContent = useSelector((state) => state.knowledgeReducers.knowledgeContent);\n  // const dispatch = useDispatch();\n\n  useEffect(() => {\n    let data = {\n      articleNumber,\n      articleContent,\n      articleType,\n      title,\n      shortDescription,\n      author,\n      category,\n      PreviewImage\n    };\n    setKnowledgeContent(data);\n    // dispatch(setKnowledgeContent(data));\n  }, [articleNumber, articleType, category, author, articleContent, title, shortDescription]);\n  const formData = new FormData();\n  const [update, setUpdate] = useState();\n  const [articleID, setArticleID] = useState(\"\");\n  function postArticle() {\n    if (!update) {\n      const params = `${serverAPI}/publish-knowledge-article`;\n      publish_article(params);\n    } else {\n      const params = `${serverAPI}/update-knowledge-article/${articleID}`;\n      publish_article(params);\n    }\n  }\n  async function publish_article(params) {\n    // formData.append('KnowledgeArticleModel', new Blob([JSON.stringify(knowledgeContent)], { type: 'application/json' }));\n    formData.append(\"file\", image);\n    await axios.post(params, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => {\n      console.log(res.data);\n      if (res.data) {\n        setNotifyStatus(true);\n        setNotifyMessage(\"Successfully knowledge articles published\");\n        navigate(-1);\n      } else {\n        setNotifyStatus(true);\n        setNotifyMessage(res.data.statusMessage);\n      }\n    }).catch(err => {\n      setError(true);\n      setNotifyStatus(true);\n      if (err.response.data.statusMessage) {\n        setNotifyMessage(err.response.data.statusMessage);\n      } else {\n        setNotifyMessage(err.response.data.message);\n      }\n      console.log(err);\n    });\n  }\n  useEffect(() => {\n    articleCount();\n  }, []);\n  async function articleCount() {\n    await axios.get(`${serverAPI}/all-articles-count`).then(res => {\n      const tempNum = parseInt(res.data.totalCount) + 1;\n      setArticleNumber(`KB-024-0000` + tempNum);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  useEffect(() => {\n    // setArticleNumber(knowledgeContent.articleNumber);\n    // setArticleType(knowledgeContent.articleType)\n    // setArticleContent(knowledgeContent.articleContent)\n    // setTitle(knowledgeContent.title);\n    // setShortDescription(knowledgeContent.shortDescription)\n    // setCategory(knowledgeContent.category);\n    // setAuthor(knowledgeContent.author);\n    // setPreviewImage(knowledgeContent.PreviewImage);\n    // setImage(knowledgeContent.imageData)\n  }, []);\n\n  // const defaultTheme = createMuiTheme();\n\n  const editor = useRef(null);\n  const [content, setContent] = useState('');\n  const config = useMemo(() => ({\n    readonly: false,\n    placeholder: placeholder || 'Start typings...'\n  })[placeholder]);\n  function handleFileChange(e) {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n    }\n  }\n  useEffect(() => {\n    console.log(articleContent);\n  }, [articleContent]);\n  async function fetchArticle(id) {\n    await axios.get(`${serverAPI}/get-knowledge-article/${id}`).then(res => {\n      const {\n        articleNumber,\n        articleType,\n        articleContent,\n        title,\n        shortDescription,\n        category,\n        author,\n        PreviewImage\n      } = res.data[0];\n      setArticleNumber(articleNumber);\n      setArticleType(articleType);\n      setArticleContent(articleContent);\n      setTitle(title);\n      setShortDescription(shortDescription);\n      setCategory(category);\n      setAuthor(author);\n      setPreviewImage(PreviewImage);\n      // dispatch(setKnowledgeContent(res.data[0]))\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  useEffect(() => {\n    // console.log(searchParams.get(\"articleID\"));\n    // if (searchParams.get(\"articleID\")) {\n    //   fetchArticle(searchParams.get(\"articleID\"));\n    //   setArticleID(searchParams.get(\"articleID\"))\n    //   setUpdate(true)\n    // } else {\n    //   setUpdate(false);\n    // }\n  }, []);\n  const VisuallyHiddenInput = styled('input')({\n    clip: 'rect(0 0 0 0)',\n    clipPath: 'inset(50%)',\n    height: 1,\n    overflow: 'hidden',\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    whiteSpace: 'nowrap',\n    width: 1\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"warning\",\n        style: {\n          width: 200,\n          fontSize: 12,\n          marginTop: 13,\n          marginRight: 5\n        },\n        onClick: () => handleCellClick(articleContent),\n        children: \"show Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          width: 200,\n          fontSize: 12,\n          marginTop: 13\n        },\n        onClick: () => {\n          postArticle();\n        },\n        children: update ? \"Update Article\" : \"Publish Article\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 30\n      },\n      children: [/*#__PURE__*/_jsxDEV(CmdbGridContainer, {\n        show: [true, true, false, false],\n        dropdown: [false, true],\n        name: [\"Article Number\", \"Article Type\"],\n        Name1: articleNumber,\n        SelectedValue2: articleType,\n        setSelectValue2: setArticleType,\n        label: [\"Requested Date\", \"\"],\n        MenuItems: [OrgOptions, [{\n          value: \"HTML\"\n        }]],\n        setName1: setArticleNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CmdbGridContainer, {\n        show: [true, true, false, false],\n        dropdown: [false, true],\n        name: [\"Author\", \"Category\"],\n        Name1: author,\n        SelectedValue2: category,\n        setSelectValue2: setCategory,\n        label: [\"Requested Date\", \"\"],\n        MenuItems: [OrgOptions, [{\n          value: \"My articles\"\n        }, {\n          value: \"IT Support\"\n        }, {\n          value: \"CMDB Queries\"\n        }, {\n          value: \"ITSM Articles\"\n        }]],\n        setName1: setAuthor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(CmdbTextField, {\n            name: \"Title\",\n            Name: title,\n            setName: setTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(CmdbTextField, {\n            name: \"short description\",\n            Name: shortDescription,\n            setName: setShortDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: 78,\n          marginTop: 10,\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          width: \"40%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          component: \"label\",\n          role: undefined,\n          variant: \"contained\",\n          tabIndex: -1,\n          startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 99\n          }, this),\n          onChange: e => handleFileChange(e),\n          children: [\"upload cover image\", /*#__PURE__*/_jsxDEV(VisuallyHiddenInput, {\n            type: \"file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 176\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), PreviewImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: PreviewImage,\n          height: 50,\n          width: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 27\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"80%\",\n          marginLeft: 80,\n          marginTop: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(JoditEditor, {\n          ref: editor,\n          value: articleContent,\n          config: config\n          // tabIndex={1}\n          ,\n          onBlur: newContent => {\n            setArticleContent(newContent);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotifyBar, {\n      error: error,\n      setError: setError,\n      notifyMessage: notifyMessage,\n      notifyStatus: notifyStatus,\n      setNotifyStatus: setNotifyStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(CreateKnowledge, \"CVb93u1QTlF71mQLYOM5zOhP570=\", false, function () {\n  return [useHistory, useRouteMatch];\n});\n_c = CreateKnowledge;\nvar _c;\n$RefreshReg$(_c, \"CreateKnowledge\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useMemo","CmdbGridContainer","Button","Grid","OrgOptions","CmdbTextField","JoditEditor","axios","serverAPI","CloudUploadIcon","styled","NotifyBar","useSelector","useDispatch","setKnowledgeContent","useHistory","useRouteMatch","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateKnowledge","placeholder","_s","navigate","path","handleCellClick","params","updatedPath","replace","push","articleNumber","setArticleNumber","articleType","setArticleType","category","setCategory","author","setAuthor","title","setTitle","shortDescription","setShortDescription","articleContent","setArticleContent","image","setImage","PreviewImage","setPreviewImage","error","setError","notifyStatus","setNotifyStatus","notifyMessage","setNotifyMessage","data","formData","FormData","update","setUpdate","articleID","setArticleID","postArticle","publish_article","append","post","headers","then","res","console","log","statusMessage","catch","err","response","message","articleCount","get","tempNum","parseInt","totalCount","editor","content","setContent","config","readonly","handleFileChange","e","target","files","URL","createObjectURL","fetchArticle","id","VisuallyHiddenInput","clip","clipPath","height","overflow","position","bottom","left","whiteSpace","width","children","style","display","alignItems","justifyContent","variant","color","fontSize","marginTop","marginRight","onClick","fileName","_jsxFileName","lineNumber","columnNumber","show","dropdown","name","Name1","SelectedValue2","setSelectValue2","label","MenuItems","value","setName1","container","item","xs","Name","setName","marginLeft","flexDirection","component","role","undefined","tabIndex","startIcon","onChange","type","src","ref","onBlur","newContent","_c","$RefreshReg$"],"sources":["C:/Users/DELL/development_loc/itsm_frontend/src/Components/KnowledgeArticle/CreateKnowledge.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useMemo } from 'react';\r\nimport CmdbGridContainer from '../HelperComponents/GridContainer';\r\n// import ContentDevider from '../HelperComponents/ContentDevider';\r\nimport { Button, Grid } from '@mui/material';\r\nimport { OrgOptions } from '../../Utils/CMDB-Data/CIData';\r\n// import { approvedData } from '../../Utils/Request Data/RequestItemData';\r\nimport CmdbTextField from '../HelperComponents/TextField';\r\n// import { createMuiTheme } from '@mui/material/styles'\r\n// import { RequestContext } from '../../Routes/HomeRouter';\r\n// import MUIRichTextEditor from 'mui-rte'\r\n// import {convertToRaw} from 'draft-js';\r\nimport JoditEditor from 'jodit-react';\r\n// import { Link, useNavigate, useSearchParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { serverAPI } from '../../Utils/Server';\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport { styled } from '@mui/material/styles';\r\n// import { Preview } from '@mui/icons-material';\r\nimport NotifyBar from '../Notification Components/NotifyBar';\r\n// import KnowledgeList from './KnowledgeList';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setKnowledgeContent } from '../../Redux state management/Redux Slices/KnowledgeDataSlice';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { useRouteMatch } from 'react-router-dom/cjs/react-router-dom';\r\n\r\nexport default function CreateKnowledge({ placeholder }) {\r\n\r\n  // const{articleID} = useParams();\r\n  const navigate = useHistory();\r\n  const { path } = useRouteMatch();\r\n\r\n  const handleCellClick = (params) => {\r\n    const updatedPath = path.replace('knowledge-creation', '');\r\n    navigate.push(`${updatedPath}created-knowledge-preview`);\r\n  };\r\n  // const{knowledgeContent,setknowledgeContent}=useContext(RequestContext);\r\n  const [articleNumber, setArticleNumber] = useState(\"\");\r\n  const [articleType, setArticleType] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [shortDescription, setShortDescription] = useState(\"\");\r\n  const [articleContent, setArticleContent] = useState(\"\");\r\n  const [image, setImage] = useState();\r\n  const [PreviewImage, setPreviewImage] = useState();\r\n\r\n  const [error, setError] = useState(false);\r\n  const [notifyStatus, setNotifyStatus] = useState(false);\r\n  const [notifyMessage, setNotifyMessage] = useState(\"\");\r\n\r\n  // const [searchParams, setSearchParams] = useState();\r\n  // const knowledgeContent = useSelector((state) => state.knowledgeReducers.knowledgeContent);\r\n  // const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    let data = {\r\n      articleNumber,\r\n      articleContent,\r\n      articleType,\r\n      title,\r\n      shortDescription,\r\n      author,\r\n      category,\r\n      PreviewImage\r\n    }\r\n    setKnowledgeContent(data)\r\n    // dispatch(setKnowledgeContent(data));\r\n  }, [articleNumber, articleType, category, author, articleContent, title, shortDescription]);\r\n\r\n  const formData = new FormData();\r\n  const [update, setUpdate] = useState();\r\n  const [articleID, setArticleID] = useState(\"\");\r\n  function postArticle() {\r\n    if (!update) {\r\n      const params = `${serverAPI}/publish-knowledge-article`\r\n      publish_article(params)\r\n    } else {\r\n      const params = `${serverAPI}/update-knowledge-article/${articleID}`\r\n      publish_article(params)\r\n    }\r\n  }\r\n\r\n  async function publish_article(params) {\r\n    // formData.append('KnowledgeArticleModel', new Blob([JSON.stringify(knowledgeContent)], { type: 'application/json' }));\r\n    formData.append(\"file\", image)\r\n    await axios.post(params, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    }).then((res) => {\r\n      console.log(res.data)\r\n      if (res.data) {\r\n        setNotifyStatus(true);\r\n        setNotifyMessage(\"Successfully knowledge articles published\");\r\n        navigate(-1)\r\n      } else {\r\n        setNotifyStatus(true);\r\n        setNotifyMessage(res.data.statusMessage)\r\n      }\r\n    }).catch((err) => {\r\n      setError(true);\r\n      setNotifyStatus(true);\r\n      if (err.response.data.statusMessage) {\r\n        setNotifyMessage(err.response.data.statusMessage);\r\n      } else {\r\n        setNotifyMessage(err.response.data.message)\r\n      }\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    articleCount();\r\n  }, [])\r\n\r\n  async function articleCount() {\r\n    await axios.get(`${serverAPI}/all-articles-count`).then((res) => {\r\n      const tempNum = parseInt(res.data.totalCount) + 1;\r\n      setArticleNumber(`KB-024-0000` + tempNum);\r\n\r\n    }).catch((err) => { console.log(err) });\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    // setArticleNumber(knowledgeContent.articleNumber);\r\n    // setArticleType(knowledgeContent.articleType)\r\n    // setArticleContent(knowledgeContent.articleContent)\r\n    // setTitle(knowledgeContent.title);\r\n    // setShortDescription(knowledgeContent.shortDescription)\r\n    // setCategory(knowledgeContent.category);\r\n    // setAuthor(knowledgeContent.author);\r\n    // setPreviewImage(knowledgeContent.PreviewImage);\r\n    // setImage(knowledgeContent.imageData)\r\n  }, [])\r\n\r\n  // const defaultTheme = createMuiTheme();\r\n\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState('');\r\n\r\n  const config = useMemo(\r\n    () => ({\r\n      readonly: false,\r\n      placeholder: placeholder || 'Start typings...'\r\n    })[placeholder]);\r\n\r\n  function handleFileChange(e) {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0])\r\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(articleContent)\r\n  }, [articleContent])\r\n\r\n  async function fetchArticle(id) {\r\n    await axios.get(`${serverAPI}/get-knowledge-article/${id}`).then((res) => {\r\n      const { articleNumber, articleType, articleContent, title, shortDescription, category, author, PreviewImage } = res.data[0];\r\n      setArticleNumber(articleNumber);\r\n      setArticleType(articleType)\r\n      setArticleContent(articleContent)\r\n      setTitle(title);\r\n      setShortDescription(shortDescription)\r\n      setCategory(category);\r\n      setAuthor(author);\r\n      setPreviewImage(PreviewImage)\r\n      // dispatch(setKnowledgeContent(res.data[0]))\r\n    }).catch((err) => {\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    // console.log(searchParams.get(\"articleID\"));\r\n    // if (searchParams.get(\"articleID\")) {\r\n    //   fetchArticle(searchParams.get(\"articleID\"));\r\n    //   setArticleID(searchParams.get(\"articleID\"))\r\n    //   setUpdate(true)\r\n    // } else {\r\n    //   setUpdate(false);\r\n    // }\r\n  }, [])\r\n\r\n  const VisuallyHiddenInput = styled('input')({\r\n    clip: 'rect(0 0 0 0)',\r\n    clipPath: 'inset(50%)',\r\n    height: 1,\r\n    overflow: 'hidden',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    whiteSpace: 'nowrap',\r\n    width: 1,\r\n  });\r\n  return (\r\n    <>\r\n      <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\" }}>\r\n        {/* <Link to=\"/knowledge-preview-page\"> */}\r\n        <Button variant=\"contained\" color=\"warning\" style={{ width: 200, fontSize: 12, marginTop: 13, marginRight: 5 }} onClick={() => handleCellClick(articleContent)}>show Preview</Button>\r\n        {/* </Link> */}\r\n        <Button variant=\"contained\" color=\"primary\" style={{ width: 200, fontSize: 12, marginTop: 13, }} onClick={() => { postArticle() }}>{update ? \"Update Article\" : \"Publish Article\"}</Button>\r\n      </div>\r\n      <div style={{ marginTop: 30 }}>\r\n        <CmdbGridContainer show={[true, true, false, false]} dropdown={[false, true]} name={[\"Article Number\", \"Article Type\"]} Name1={articleNumber} SelectedValue2={articleType} setSelectValue2={setArticleType} label={[\"Requested Date\", \"\"]} MenuItems={[OrgOptions, [{ value: \"HTML\" }]]} setName1={setArticleNumber} />\r\n\r\n        <CmdbGridContainer show={[true, true, false, false]} dropdown={[false, true]} name={[\"Author\", \"Category\"]} Name1={author} SelectedValue2={category} setSelectValue2={setCategory} label={[\"Requested Date\", \"\"]} MenuItems={[OrgOptions, [{ value: \"My articles\" }, { value: \"IT Support\" }, { value: \"CMDB Queries\" }, { value: \"ITSM Articles\" }]]} setName1={setAuthor} />\r\n\r\n        <Grid container style={{ width: \"100%\" }}>\r\n          <Grid item xs={12}>\r\n            <CmdbTextField name=\"Title\" Name={title} setName={setTitle} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <CmdbTextField name=\"short description\" Name={shortDescription} setName={setShortDescription} />\r\n          </Grid>\r\n        </Grid>\r\n        <div style={{ marginLeft: 78, marginTop: 10, display: \"flex\", flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\", width: \"40%\" }}>\r\n          <Button component=\"label\" role={undefined} variant=\"contained\" tabIndex={-1} startIcon={<CloudUploadIcon />} onChange={(e) => handleFileChange(e)}>upload cover image<VisuallyHiddenInput type=\"file\" />\r\n          </Button>\r\n          {PreviewImage ? <img src={PreviewImage} height={50} width={50} /> : null}\r\n        </div>\r\n        <div style={{ width: \"80%\", marginLeft: 80, marginTop: 20 }}>\r\n          <JoditEditor\r\n            ref={editor}\r\n            value={articleContent}\r\n            config={config}\r\n            // tabIndex={1}\r\n            onBlur={newContent => { setArticleContent(newContent) }} />\r\n        </div>\r\n      </div>\r\n      <NotifyBar error={error} setError={setError} notifyMessage={notifyMessage} notifyStatus={notifyStatus} setNotifyStatus={setNotifyStatus} />\r\n    </>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}