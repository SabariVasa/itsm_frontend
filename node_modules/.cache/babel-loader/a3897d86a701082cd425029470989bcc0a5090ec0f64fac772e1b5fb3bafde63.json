{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\development_loc\\\\itsm_frontend\\\\src\\\\Components\\\\Notification Components\\\\NotifyBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Snackbar } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NotifyBar(props) {\n  _s();\n  const [state, setState] = useState({\n    open: false,\n    vertical: 'bottom',\n    horizontal: 'center'\n  });\n  const {\n    vertical,\n    horizontal,\n    open\n  } = state;\n  // const [ErrorMessage, setErrorMessage] = useState();\n  // const handleClose = () => {\n  //   setState({ ...state, open: false })\n  // }\n\n  //   const handleOpen = (notifyStatus)=>{\n  //     setState({...state,open:notifyStatus})\n  //     setErrorMessage(props.notifyMessage)\n  //   }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical,\n        horizontal\n      },\n      open: props.notifyStatus,\n      onClose: () => props.setNotifyStatus(false),\n      autoHideDuration: 2000,\n      message: props.notifyMessage,\n      ContentProps: {\n        sx: {\n          background: props.error ? \"red\" : \"green\"\n        }\n      }\n    }, vertical + horizontal, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(NotifyBar, \"eg/zcbBu++GXwblZOCDAPI8YvG8=\");\n_c = NotifyBar;\nvar _c;\n$RefreshReg$(_c, \"NotifyBar\");","map":{"version":3,"names":["React","useState","Snackbar","jsxDEV","_jsxDEV","Fragment","_Fragment","NotifyBar","props","_s","state","setState","open","vertical","horizontal","children","anchorOrigin","notifyStatus","onClose","setNotifyStatus","autoHideDuration","message","notifyMessage","ContentProps","sx","background","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/development_loc/itsm_frontend/src/Components/Notification Components/NotifyBar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Snackbar } from '@mui/material';\r\n\r\nexport default function NotifyBar(props) {\r\n  const [state, setState] = useState({\r\n    open: false,\r\n    vertical: 'bottom',\r\n    horizontal: 'center',\r\n  });\r\n  const { vertical, horizontal, open } = state;\r\n  // const [ErrorMessage, setErrorMessage] = useState();\r\n  // const handleClose = () => {\r\n  //   setState({ ...state, open: false })\r\n  // }\r\n\r\n  //   const handleOpen = (notifyStatus)=>{\r\n  //     setState({...state,open:notifyStatus})\r\n  //     setErrorMessage(props.notifyMessage)\r\n  //   }\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        open={props.notifyStatus}\r\n        onClose={() => props.setNotifyStatus(false)}\r\n        autoHideDuration={2000}\r\n        message={props.notifyMessage}\r\n        key={vertical + horizontal}\r\n        ContentProps={{\r\n          sx: {\r\n            background: props.error ? \"red\" : \"green\"\r\n          }\r\n        }\r\n        }\r\n      /></>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzC,eAAe,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC;IACjCW,IAAI,EAAE,KAAK;IACXC,QAAQ,EAAE,QAAQ;IAClBC,UAAU,EAAE;EACd,CAAC,CAAC;EACF,MAAM;IAAED,QAAQ;IAAEC,UAAU;IAAEF;EAAK,CAAC,GAAGF,KAAK;EAC5C;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA,oBACEN,OAAA,CAAAE,SAAA;IAAAS,QAAA,eACEX,OAAA,CAACF,QAAQ;MACPc,YAAY,EAAE;QAAEH,QAAQ;QAAEC;MAAW,CAAE;MACvCF,IAAI,EAAEJ,KAAK,CAACS,YAAa;MACzBC,OAAO,EAAEA,CAAA,KAAMV,KAAK,CAACW,eAAe,CAAC,KAAK,CAAE;MAC5CC,gBAAgB,EAAE,IAAK;MACvBC,OAAO,EAAEb,KAAK,CAACc,aAAc;MAE7BC,YAAY,EAAE;QACZC,EAAE,EAAE;UACFC,UAAU,EAAEjB,KAAK,CAACkB,KAAK,GAAG,KAAK,GAAG;QACpC;MACF;IACC,GANIb,QAAQ,GAAGC,UAAU;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAO3B;EAAC,gBAAE,CAAC;AAEX;AAACrB,EAAA,CAjCuBF,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}