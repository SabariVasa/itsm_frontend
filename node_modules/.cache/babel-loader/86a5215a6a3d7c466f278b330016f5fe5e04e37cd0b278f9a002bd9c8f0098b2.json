{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\development_loc\\\\itsm_frontend\\\\src\\\\Components\\\\Request Management\\\\Main Component\\\\ServiceCategoryForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ContentDevider from '../../HelperComponents/ContentDevider';\nimport { useHistory } from 'react-router-dom';\n// import { useParams, useSearchParams, useNavigate } from 'react-router-dom'\n// import { OrgOptions, StatusOptions } from '../../../Utils/CMDB-Data/CIData';\nimport { accessApplication, affectedServices, requestApprovers, requestState, userRoles } from '../../../Utils/Request Data/RequestItemData';\nimport { Grid, Box, TextField, Button, Stack } from \"@mui/material\";\nimport CmdbGridContainer from '../../HelperComponents/GridContainer';\n// import { CategoryOutlined, HorizontalRule } from '@mui/icons-material';\n// import { statusState } from '../../../Utils/CMDB-Data/serviceData';\n// import { RequestContext } from '../../../Routes/HomeRouter';  \nimport axios from 'axios';\nimport NotifyBar from '../../Notification Components/NotifyBar';\nimport { serverAPI } from '../../../Utils/Server';\n// import { useDispatch, useSelector } from 'react-redux';\nimport { setRequestGeneralService } from '../../../Redux state management/Redux Slices/RequestSlice';\nimport { setActiveStep } from '../../../Redux state management/Redux Slices/GlobalStepperSlice';\nimport StepperComponent from '../../HelperComponents/StepperComponent';\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\nimport { TextareaAutosize } from '@mui/material';\nimport SearchTextField from '../../HelperComponents/SearchTextField';\nimport SelectField from '../../HelperComponents/SelectField';\nimport DraggableModal from '../../User Management/DraggableModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ServiceCategoryForm(props) {\n  _s();\n  const navigate = useHistory();\n  // const dispatch = useDispatch();\n  // const requestGeneralService = useSelector((state) => state.requestReducers.requestGeneralService);\n  // const requestDetails = useSelector((state) => state.requestReducers.requestDetails);\n\n  // const activeStep = useSelector((state) => state.globalReducers.activeStep);\n\n  const {\n    match: {\n      params: {\n        category\n      }\n    }\n  } = props;\n  const [affectedUser, setAffecteduser] = React.useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  const [notes, setNotes] = useState([]);\n  const [approvalStatus, setApprovalStatus] = React.useState(\"\");\n  const [requesterName, setRequesterName] = React.useState(localStorage.getItem(\"userEmail\"));\n  const [priorityLevel, setPriorityLevel] = useState(\"\");\n  const [preferedContact, setPreferedContact] = React.useState(\"\");\n  // const OrgOptions = [\"Organization 1\",\"Organization 2\",\"Organization 3\"];\n  const approvedData = [\"Approved\", \"Denied\", \"Pending\"];\n  const [buttonDisabled, setButtonDisabled] = React.useState(false);\n  const [serviceType, setServcieType] = useState(\"\");\n  const [notifyMessage, setNotifyMessage] = React.useState();\n  const [error, setError] = React.useState();\n  const [notifyStatus, setNotifyStatus] = useState();\n  const priorityStatus = [{\n    value: \"High\"\n  }, {\n    value: \"moderate\"\n  }, {\n    value: \"Low\"\n  }];\n  const contactMethod = [{\n    value: \"Email\"\n  }, {\n    value: \"Phone call\"\n  }, {\n    value: \"chat/instant messaging\"\n  }];\n  const [requestAccess, setRequestAccess] = useState(\"\");\n  const [approvalFrom, setApprovalFrom] = useState(\"\");\n  const [userRole, setUserRole] = useState(\"\");\n  const [affectedService, setAffectedService] = useState(\"\");\n  const [changeDate, setChangeDate] = useState(\"\");\n  const [backoutPlan, setBackoutPlan] = useState(\"\");\n  const [changeApproval, setChangeApproval] = useState(\"\");\n  const [update, setUpdate] = useState(false);\n  const [reasonDescription, setReasonDescription] = useState(\"\");\n  const [searchParams, setSearchParams] = useState(\"\");\n  const [createdBy, setCreatedBy] = useState(\"\");\n  const [UpdatedDate, setUpdatedDate] = useState('');\n  const [value, setValue] = React.useState('1');\n  const handleAddNote = () => {\n    if (comment.trim()) {\n      // Check for empty value\n      const noteObject = {\n        text: comment,\n        createdBy: localStorage.getItem(\"userEmail\"),\n        timestamp: new Date().toLocaleString() // Add timestamp\n      };\n      setNotes([noteObject, ...notes]); // Add new note object, preserving order\n      setComment(''); // Clear input after adding\n    } else {\n      alert('Please enter a note before adding.');\n    }\n  };\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  useEffect(() => {\n    // dispatch(setRequestGeneralService({\n    //   ...requestGeneralService,\n    //   affectedService,\n    //   requestAccess,\n    //   approvalFrom,\n    //   userRole,\n    //   changeDate,\n    //   backoutPlan,\n    //   changeApproval,\n    //   reasonDescription,\n    //   affectedUser,\n    //   preferedContact,\n    //   reasonDescription,\n    //   requestType: serviceType,\n    //   requesterName\n    // }))\n  }, [affectedUser, requestAccess, approvalFrom, userRole, changeDate, backoutPlan, changeApproval, reasonDescription, affectedUser, preferedContact, serviceType, requesterName]);\n  async function createRequest() {\n    // console.log(requestGeneralService)\n    // await axios.post(`${serverAPI}/create-general-request`, requestGeneralService).then((res) => {\n    //   if (res.data) {\n    //     setNotifyMessage(\"Successfully request created\")\n    //     setNotifyStatus(true)\n    //   } else {\n    //     setError(true)\n    //     setNotifyMessage(\"Something went wrong, please try again\")\n    //   }\n    // }).catch((err) => {\n    //   setError(true)\n    //   setNotifyMessage(\"Something went wrong, please try again\")\n    // });\n  }\n  async function updateRequest() {\n    const requestID = searchParams.get('update');\n\n    // try {\n    //   await axios.post(`${serverAPI}/update-general-request/${requestID}`, requestGeneralService).then((response) => {\n    //     if (response.data) {\n    //       setNotifyMessage(\"Successfully request updated\")\n    //       setNotifyStatus(true);\n    //     } else {\n    //       setError(true)\n    //       setNotifyMessage(\"Something went wrong, please try again\")\n    //     }\n    //   }).catch((err) => {\n    //     setError(true)\n    //     setNotifyMessage(\"Something went wrong, please try again\")\n    //   });\n    // } catch (error) {\n    //   console.error(error);\n    // }\n  }\n  const [openedDate, setOpenedDate] = useState(\"\");\n  async function fetchReqeustItem(requestID) {\n    // try {\n    //   await axios.get(`${serverAPI}/get-general-request-RID/${requestID}`).then((response) => {\n    //     const {\n    //       affectedUser,\n    //       priority,\n    //       approvalStatus,\n    //       preferedContact,\n    //       requesterName,\n    //       requestType,\n    //       reasonDescription,\n    //       requestedAccess,\n    //       approvalFrom,\n    //       userRole,\n    //       affectedService,\n    //       changeDate,\n    //       backoutPlan,\n    //       openedDate\n    //     } = response.data[0];\n    //     dispatch(setRequestGeneralService({\n    //       affectedUser,\n    //       priority,\n    //       approvalStatus,\n    //       preferedContact,\n    //       requesterName,\n    //       requestType,\n    //       reasonDescription,\n    //       requestedAccess,\n    //       approvalFrom,\n    //       userRole,\n    //       affectedService,\n    //       changeDate,\n    //       backoutPlan,\n    //       openedDate\n    //     }))\n    //     setAffecteduser(affectedUser);\n    //     setPriorityLevel(priority);\n    //     setApprovalStatus(approvalStatus);\n    //     setPreferedContact(preferedContact);\n    //     setRequesterName(requesterName);\n    //     setServcieType(requestType);\n    //     setReasonDescription(reasonDescription);\n    //     setRequestAccess(requestedAccess);\n    //     setApprovalFrom(approvalFrom);\n    //     setUserRole(userRole);\n    //     setAffectedService(affectedService);\n    //     setChangeDate(changeDate);\n    //     setBackoutPlan(backoutPlan);\n    //     setOpenedDate(openedDate);\n    //   }).catch((err) => { console.log(err) })\n    // } catch (error) {\n    //   console.error(error);\n    // }\n  }\n  useEffect(() => {\n    if (searchParams.get('update')) {\n      fetchReqeustItem(searchParams.get('update'));\n      setUpdate(true);\n      console.log();\n    } else {\n      setUpdate(false);\n    }\n  }, []);\n  useEffect(() => {\n    // dispatch(setRequestGeneralService(({\n    //   ...requestGeneralService,\n    //   affectedUser,\n    //   priority: priorityLevel,\n    //   approvalStatus: approvalStatus,\n    //   preferedContact,\n    //   reasonDescription,\n    //   requestedAccess: requestAccess,\n    //   approvalFrom,\n    //   userRole,\n    //   affectedService,\n    //   changeDate,\n    //   backoutPlan,\n    //   requesterName\n    // })))\n    // console.log(requestGeneralService);\n  }, [affectedUser, preferedContact, priorityLevel, approvalStatus, reasonDescription, requestAccess, approvalFrom, userRole, priorityLevel, approvalStatus, reasonDescription]);\n  const [itemOpen, setItemOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setItemOpen(true);\n  };\n\n  // const endUserIncident = useSelector((state) => state.incidentReducers.endUserIncident)\n  useEffect(() => {\n    // setAffecteduser(endUserIncident.Email);\n  }, []);\n  const handleItemClose = () => {\n    setItemOpen(false);\n  };\n  useEffect(() => {\n    setAffecteduser(localStorage.getItem(\"userEmail\"));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflowX: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(DraggableModal, {\n      open: itemOpen,\n      setOpen: setItemOpen,\n      handleClickOpen: handleClickOpen,\n      handleClose: handleItemClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), !update ? /*#__PURE__*/_jsxDEV(StepperComponent, {\n      steps: [\"General Information\", \"Technical Information\", \"Submit Request\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 18\n    }, this) : null, category === \"Reset password\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ContentDevider, {\n        title: `${category} service`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        rowSpacing: 1,\n        sx: {\n          width: '100%',\n          display: 'flex',\n          alignItems: 'center'\n        },\n        columnSpacing: {\n          xs: 1,\n          sm: 2,\n          md: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(SelectField, {\n            MenuItems: contactMethod,\n            setSelectValue: setPreferedContact,\n            SelectedValue: preferedContact,\n            label: \"Preferred Contact method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 5,\n          style: {\n            marginLeft: 70\n          },\n          children: /*#__PURE__*/_jsxDEV(SearchTextField, {\n            placeholder: \"Affected Account\",\n            fieldValue: affectedUser,\n            setFieldValue: setAffecteduser,\n            search: true,\n            handleClickOpen: handleClickOpen,\n            open: itemOpen,\n            style: {\n              marginTop: 12,\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), update && /*#__PURE__*/_jsxDEV(CmdbGridContainer, {\n        show: [true, true, false, false],\n        dropdown: [true, true],\n        name: [\"Priority\", \"Ticket Status\"],\n        Name1: priorityLevel,\n        setName1: setPriorityLevel,\n        Name2: requesterName,\n        setName2: setRequesterName,\n        SelectedValue1: priorityLevel,\n        setSelectValue1: setPriorityLevel,\n        SelectedValue2: approvalStatus,\n        setSelectValue2: setApprovalStatus,\n        label: [\"Requested Date\", \"\"],\n        MenuItems: [priorityStatus, requestState]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, category === \"Access request\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ContentDevider, {\n        title: `${category} servcie`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CmdbGridContainer, {\n        show: [true, true, false, false],\n        dropdown: [true, true],\n        name: [\"Requested access Service/System\", \"Need approval from\"],\n        SelectedValue1: requestAccess,\n        setSelectValue1: setRequestAccess,\n        Name2: requesterName,\n        setName2: setRequesterName,\n        SelectedValue2: approvalFrom,\n        setSelectValue2: setApprovalFrom,\n        label: [\"Requested Date\", \"\"],\n        MenuItems: [accessApplication, requestApprovers]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), update && /*#__PURE__*/_jsxDEV(CmdbGridContainer, {\n        show: [true, true, false, false],\n        dropdown: [true, true],\n        name: [\"Priority\", \"Approval status\"],\n        Name1: priorityLevel,\n        setName1: setPriorityLevel,\n        Name2: requesterName,\n        setName2: setRequesterName,\n        SelectedValue1: priorityLevel,\n        setSelectValue1: setPriorityLevel,\n        SelectedValue2: approvalStatus,\n        setSelectValue2: setApprovalStatus,\n        label: [\"Requested Date\", \"\"],\n        MenuItems: [priorityStatus, requestState]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 20\n      }, this), update && /*#__PURE__*/_jsxDEV(CmdbGridContainer, {\n        show: [true, false, false, false],\n        dropdown: [true, true],\n        name: [\"User Role\", \"\"],\n        Name1: priorityLevel,\n        setName1: setPriorityLevel,\n        Name2: requesterName,\n        setName2: setRequesterName,\n        SelectedValue1: userRole,\n        setSelectValue1: setUserRole,\n        SelectedValue2: approvalStatus,\n        setSelectValue2: setApprovalStatus,\n        label: [\"Requested Date\", \"\"],\n        MenuItems: [userRoles, requestState]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true) : null, category === \"Change request\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ContentDevider, {\n        title: `${category} servcie`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CmdbGridContainer, {\n        show: [true, true, false, false],\n        dropdown: [true, true],\n        name: [\"Affected system Service/System\", \"CAB Approval status\"],\n        SelectedValue1: affectedService,\n        setSelectValue1: setAffectedService,\n        Name2: requesterName,\n        setName2: setRequesterName,\n        SelectedValue2: approvalStatus,\n        setSelectValue2: setApprovalStatus,\n        label: [\"Requested Date\", \"\"],\n        MenuItems: [affectedServices, requestState]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CmdbGridContainer, {\n        show: [true, false, true, false],\n        dropdown: [true, false],\n        name: [\"Priority\", \"Approval status\"],\n        Name1: priorityLevel,\n        setName1: setPriorityLevel,\n        Name2: requesterName,\n        setName2: setRequesterName,\n        SelectedValue1: priorityLevel,\n        setSelectValue1: setPriorityLevel,\n        SelectedValue2: approvalStatus,\n        setSelectValue2: setApprovalStatus,\n        Date1: changeDate,\n        setDate1: setChangeDate,\n        label: [\"Change date\", \"\"],\n        MenuItems: [priorityStatus, requestState]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        style: {\n          width: \"103%\",\n          display: \"flex\",\n          padding: 20,\n          marginLeft: 10,\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 11,\n          style: {\n            display: \"flex\"\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            autofocus: true,\n            style: {\n              width: \"103%\"\n            },\n            name: `Reason for ${category}`,\n            label: `Backout Plan for ${category}`,\n            type: \"text\",\n            id: `Reason for ${category}`,\n            value: backoutPlan,\n            onChange: e => {\n              setBackoutPlan(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      style: {\n        width: \"103%\",\n        display: \"flex\",\n        padding: 20,\n        marginLeft: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 11,\n        style: {\n          display: \"flex\"\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          autofocus: true,\n          style: {\n            width: \"100%\"\n          },\n          name: `Reason for ${category}`,\n          label: `Reason for ${category}`,\n          type: \"text\",\n          id: `Reason for ${category}`,\n          value: reasonDescription,\n          onChange: e => {\n            setReasonDescription(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      style: {\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: \"space-around\",\n        paddingRight: 20,\n        paddingTop: 50,\n        paddingBottom: 30\n      },\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"warning\",\n        style: {\n          width: 100\n        },\n        onClick: () => {},\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          width: 200\n        },\n        onClick: () => {\n          // !update ? createRequest() : updateRequest(); dispatch(setActiveStep(activeStep + 2));\n\n          if (localStorage.getItem(\"userEmail\") === \"user@teksiblegroup.com\") {\n            navigate(\"/\");\n          }\n        },\n        children: !update ? \"Create request\" : \"Update request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), update ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '90%',\n        typography: 'body1',\n        marginTop: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(TabContext, {\n        value: value,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            borderBottom: 1,\n            borderColor: 'divider'\n          },\n          children: /*#__PURE__*/_jsxDEV(TabList, {\n            onChange: handleChange,\n            \"aria-label\": \"lab API tabs example\",\n            children: /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Activity Bar\",\n              value: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: \"1\",\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            style: {\n              display: 'flex',\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              paddingRight: 20,\n              marginTop: 20\n            },\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                display: 'block',\n                color: \"grey\",\n                marginLeft: 10,\n                marginBottom: 10\n              },\n              htmlFor: \"textarea\",\n              children: \"Activity Notes :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              style: {\n                width: 130,\n                fontSize: 12,\n                marginBottom: 10\n              },\n              onClick: handleAddNote,\n              children: \"update notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n            \"aria-label\": \"empty textarea\",\n            minRows: 5,\n            placeholder: \"Enter the notes\",\n            style: {\n              width: \"100%\",\n              padding: 20\n            },\n            value: comment,\n            onChange: e => {\n              setComment(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            style: {\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              backgroundColor: \"#e6e6e6\",\n              borderRadius: 10,\n              paddingLeft: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                fontWeight: \"normal\",\n                fontSize: 16\n              },\n              children: [\"Service request raised by \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: requesterName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 92\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                fontWeight: \"normal\",\n                marginTop: -20,\n                fontSize: 15\n              },\n              children: [\"created at \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: openedDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 93\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              marginTop: 10\n            },\n            children: notes.map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: '#e6e6e6',\n                borderRadius: 10,\n                paddingLeft: 10,\n                marginTop: 10\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  fontWeight: 'normal',\n                  fontSize: 16\n                },\n                children: note.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  fontWeight: 'normal',\n                  fontSize: 13\n                },\n                children: [\"Note updated by \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: note.createdBy\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 85\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  fontWeight: 'normal',\n                  fontSize: 13,\n                  marginTop: -10\n                },\n                children: [\"created at \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: note.timestamp\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 96\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 17\n    }, this) : null, /*#__PURE__*/_jsxDEV(NotifyBar, {\n      error: error,\n      notifyMessage: notifyMessage,\n      notifyStatus: notifyStatus,\n      setNotifyStatus: setNotifyStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n}\n_s(ServiceCategoryForm, \"f4NY/e8NXvqbi16J8ko+iQB9+r4=\", false, function () {\n  return [useHistory];\n});\n_c = ServiceCategoryForm;\nvar _c;\n$RefreshReg$(_c, \"ServiceCategoryForm\");","map":{"version":3,"names":["React","useState","useEffect","ContentDevider","useHistory","accessApplication","affectedServices","requestApprovers","requestState","userRoles","Grid","Box","TextField","Button","Stack","CmdbGridContainer","axios","NotifyBar","serverAPI","setRequestGeneralService","setActiveStep","StepperComponent","Tab","TabContext","TabList","TabPanel","TextareaAutosize","SearchTextField","SelectField","DraggableModal","jsxDEV","_jsxDEV","Fragment","_Fragment","ServiceCategoryForm","props","_s","navigate","match","params","category","affectedUser","setAffecteduser","comment","setComment","notes","setNotes","approvalStatus","setApprovalStatus","requesterName","setRequesterName","localStorage","getItem","priorityLevel","setPriorityLevel","preferedContact","setPreferedContact","approvedData","buttonDisabled","setButtonDisabled","serviceType","setServcieType","notifyMessage","setNotifyMessage","error","setError","notifyStatus","setNotifyStatus","priorityStatus","value","contactMethod","requestAccess","setRequestAccess","approvalFrom","setApprovalFrom","userRole","setUserRole","affectedService","setAffectedService","changeDate","setChangeDate","backoutPlan","setBackoutPlan","changeApproval","setChangeApproval","update","setUpdate","reasonDescription","setReasonDescription","searchParams","setSearchParams","createdBy","setCreatedBy","UpdatedDate","setUpdatedDate","setValue","handleAddNote","trim","noteObject","text","timestamp","Date","toLocaleString","alert","handleChange","event","newValue","createRequest","updateRequest","requestID","get","openedDate","setOpenedDate","fetchReqeustItem","console","log","itemOpen","setItemOpen","handleClickOpen","handleItemClose","style","overflowX","children","open","setOpen","handleClose","fileName","_jsxFileName","lineNumber","columnNumber","steps","title","container","rowSpacing","sx","width","display","alignItems","columnSpacing","xs","sm","md","item","MenuItems","setSelectValue","SelectedValue","label","marginLeft","placeholder","fieldValue","setFieldValue","search","marginTop","show","dropdown","name","Name1","setName1","Name2","setName2","SelectedValue1","setSelectValue1","SelectedValue2","setSelectValue2","Date1","setDate1","spacing","padding","justifyContent","autofocus","type","id","onChange","e","target","paddingRight","paddingTop","paddingBottom","direction","variant","color","onClick","typography","borderBottom","borderColor","marginBottom","htmlFor","fontSize","minRows","flexDirection","backgroundColor","borderRadius","paddingLeft","fontWeight","map","note","index","_c","$RefreshReg$"],"sources":["C:/Users/DELL/development_loc/itsm_frontend/src/Components/Request Management/Main Component/ServiceCategoryForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport ContentDevider from '../../HelperComponents/ContentDevider'\r\nimport { useHistory } from 'react-router-dom';\r\n// import { useParams, useSearchParams, useNavigate } from 'react-router-dom'\r\n// import { OrgOptions, StatusOptions } from '../../../Utils/CMDB-Data/CIData';\r\nimport { accessApplication, affectedServices, requestApprovers, requestState, userRoles } from '../../../Utils/Request Data/RequestItemData';\r\nimport { Grid, Box, TextField, Button, Stack } from \"@mui/material\";\r\nimport CmdbGridContainer from '../../HelperComponents/GridContainer';\r\n// import { CategoryOutlined, HorizontalRule } from '@mui/icons-material';\r\n// import { statusState } from '../../../Utils/CMDB-Data/serviceData';\r\n// import { RequestContext } from '../../../Routes/HomeRouter';  \r\nimport axios from 'axios';\r\nimport NotifyBar from '../../Notification Components/NotifyBar';\r\nimport { serverAPI } from '../../../Utils/Server';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\nimport { setRequestGeneralService } from '../../../Redux state management/Redux Slices/RequestSlice';\r\nimport { setActiveStep } from '../../../Redux state management/Redux Slices/GlobalStepperSlice';\r\nimport StepperComponent from '../../HelperComponents/StepperComponent';\r\nimport Tab from '@mui/material/Tab';\r\nimport TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport { TextareaAutosize } from '@mui/material';\r\nimport SearchTextField from '../../HelperComponents/SearchTextField';\r\nimport SelectField from '../../HelperComponents/SelectField';\r\nimport DraggableModal from '../../User Management/DraggableModal';\r\n\r\n\r\n\r\nexport default function ServiceCategoryForm(props) {\r\n  const navigate = useHistory();\r\n  // const dispatch = useDispatch();\r\n  // const requestGeneralService = useSelector((state) => state.requestReducers.requestGeneralService);\r\n  // const requestDetails = useSelector((state) => state.requestReducers.requestDetails);\r\n\r\n  // const activeStep = useSelector((state) => state.globalReducers.activeStep);\r\n\r\n  const { match: { params: { category } } } = props;\r\n  const [affectedUser, setAffecteduser] = React.useState(\"\");\r\n\r\n  const [comment, setComment] = useState(\"\");\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  const [approvalStatus, setApprovalStatus] = React.useState(\"\");\r\n  const [requesterName, setRequesterName] = React.useState(localStorage.getItem(\"userEmail\"));\r\n  const [priorityLevel, setPriorityLevel] = useState(\"\");\r\n  const [preferedContact, setPreferedContact] = React.useState(\"\");\r\n  // const OrgOptions = [\"Organization 1\",\"Organization 2\",\"Organization 3\"];\r\n  const approvedData = [\"Approved\", \"Denied\", \"Pending\"];\r\n  const [buttonDisabled, setButtonDisabled] = React.useState(false);\r\n  const [serviceType, setServcieType] = useState(\"\");\r\n\r\n  const [notifyMessage, setNotifyMessage] = React.useState()\r\n  const [error, setError] = React.useState();\r\n  const [notifyStatus, setNotifyStatus] = useState();\r\n\r\n  const priorityStatus = [{ value: \"High\" }, { value: \"moderate\" }, { value: \"Low\" }]\r\n  const contactMethod = [{ value: \"Email\" }, { value: \"Phone call\" }, { value: \"chat/instant messaging\" }]\r\n\r\n  const [requestAccess, setRequestAccess] = useState(\"\");\r\n  const [approvalFrom, setApprovalFrom] = useState(\"\");\r\n  const [userRole, setUserRole] = useState(\"\");\r\n\r\n  const [affectedService, setAffectedService] = useState(\"\");\r\n  const [changeDate, setChangeDate] = useState(\"\");\r\n  const [backoutPlan, setBackoutPlan] = useState(\"\");\r\n  const [changeApproval, setChangeApproval] = useState(\"\");\r\n  const [update, setUpdate] = useState(false);\r\n\r\n  const [reasonDescription, setReasonDescription] = useState(\"\");\r\n  const [searchParams, setSearchParams] = useState(\"\");\r\n\r\n  const [createdBy, setCreatedBy] = useState(\"\");\r\n  const [UpdatedDate, setUpdatedDate] = useState('');\r\n  const [value, setValue] = React.useState('1');\r\n\r\n  const handleAddNote = () => {\r\n    if (comment.trim()) { // Check for empty value\r\n      const noteObject = {\r\n        text: comment,\r\n        createdBy: localStorage.getItem(\"userEmail\"),\r\n        timestamp: new Date().toLocaleString() // Add timestamp\r\n      };\r\n      setNotes([noteObject, ...notes]); // Add new note object, preserving order\r\n      setComment(''); // Clear input after adding\r\n    } else {\r\n      alert('Please enter a note before adding.');\r\n    }\r\n  };\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // dispatch(setRequestGeneralService({\r\n    //   ...requestGeneralService,\r\n    //   affectedService,\r\n    //   requestAccess,\r\n    //   approvalFrom,\r\n    //   userRole,\r\n    //   changeDate,\r\n    //   backoutPlan,\r\n    //   changeApproval,\r\n    //   reasonDescription,\r\n    //   affectedUser,\r\n    //   preferedContact,\r\n    //   reasonDescription,\r\n    //   requestType: serviceType,\r\n    //   requesterName\r\n    // }))\r\n  }, [affectedUser, requestAccess, approvalFrom, userRole, changeDate, backoutPlan, changeApproval, reasonDescription, affectedUser, preferedContact, serviceType, requesterName])\r\n\r\n\r\n  async function createRequest() {\r\n    // console.log(requestGeneralService)\r\n    // await axios.post(`${serverAPI}/create-general-request`, requestGeneralService).then((res) => {\r\n    //   if (res.data) {\r\n    //     setNotifyMessage(\"Successfully request created\")\r\n    //     setNotifyStatus(true)\r\n    //   } else {\r\n    //     setError(true)\r\n    //     setNotifyMessage(\"Something went wrong, please try again\")\r\n    //   }\r\n    // }).catch((err) => {\r\n    //   setError(true)\r\n    //   setNotifyMessage(\"Something went wrong, please try again\")\r\n    // });\r\n  }\r\n\r\n\r\n\r\n\r\n  async function updateRequest() {\r\n    const requestID = searchParams.get('update');\r\n\r\n    // try {\r\n    //   await axios.post(`${serverAPI}/update-general-request/${requestID}`, requestGeneralService).then((response) => {\r\n    //     if (response.data) {\r\n    //       setNotifyMessage(\"Successfully request updated\")\r\n    //       setNotifyStatus(true);\r\n    //     } else {\r\n    //       setError(true)\r\n    //       setNotifyMessage(\"Something went wrong, please try again\")\r\n    //     }\r\n    //   }).catch((err) => {\r\n    //     setError(true)\r\n    //     setNotifyMessage(\"Something went wrong, please try again\")\r\n    //   });\r\n    // } catch (error) {\r\n    //   console.error(error);\r\n    // }\r\n  }\r\n\r\n  const [openedDate, setOpenedDate] = useState(\"\");\r\n  async function fetchReqeustItem(requestID) {\r\n    // try {\r\n    //   await axios.get(`${serverAPI}/get-general-request-RID/${requestID}`).then((response) => {\r\n    //     const {\r\n    //       affectedUser,\r\n    //       priority,\r\n    //       approvalStatus,\r\n    //       preferedContact,\r\n    //       requesterName,\r\n    //       requestType,\r\n    //       reasonDescription,\r\n    //       requestedAccess,\r\n    //       approvalFrom,\r\n    //       userRole,\r\n    //       affectedService,\r\n    //       changeDate,\r\n    //       backoutPlan,\r\n    //       openedDate\r\n    //     } = response.data[0];\r\n    //     dispatch(setRequestGeneralService({\r\n    //       affectedUser,\r\n    //       priority,\r\n    //       approvalStatus,\r\n    //       preferedContact,\r\n    //       requesterName,\r\n    //       requestType,\r\n    //       reasonDescription,\r\n    //       requestedAccess,\r\n    //       approvalFrom,\r\n    //       userRole,\r\n    //       affectedService,\r\n    //       changeDate,\r\n    //       backoutPlan,\r\n    //       openedDate\r\n    //     }))\r\n    //     setAffecteduser(affectedUser);\r\n    //     setPriorityLevel(priority);\r\n    //     setApprovalStatus(approvalStatus);\r\n    //     setPreferedContact(preferedContact);\r\n    //     setRequesterName(requesterName);\r\n    //     setServcieType(requestType);\r\n    //     setReasonDescription(reasonDescription);\r\n    //     setRequestAccess(requestedAccess);\r\n    //     setApprovalFrom(approvalFrom);\r\n    //     setUserRole(userRole);\r\n    //     setAffectedService(affectedService);\r\n    //     setChangeDate(changeDate);\r\n    //     setBackoutPlan(backoutPlan);\r\n    //     setOpenedDate(openedDate);\r\n    //   }).catch((err) => { console.log(err) })\r\n    // } catch (error) {\r\n    //   console.error(error);\r\n    // }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (searchParams.get('update')) {\r\n      fetchReqeustItem(searchParams.get('update'));\r\n      setUpdate(true)\r\n      console.log()\r\n    } else {\r\n      setUpdate(false);\r\n    }\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    // dispatch(setRequestGeneralService(({\r\n    //   ...requestGeneralService,\r\n    //   affectedUser,\r\n    //   priority: priorityLevel,\r\n    //   approvalStatus: approvalStatus,\r\n    //   preferedContact,\r\n    //   reasonDescription,\r\n    //   requestedAccess: requestAccess,\r\n    //   approvalFrom,\r\n    //   userRole,\r\n    //   affectedService,\r\n    //   changeDate,\r\n    //   backoutPlan,\r\n    //   requesterName\r\n    // })))\r\n    // console.log(requestGeneralService);\r\n  }, [affectedUser, preferedContact, priorityLevel, approvalStatus, reasonDescription, requestAccess, approvalFrom, userRole, priorityLevel, approvalStatus, reasonDescription])\r\n\r\n  const [itemOpen, setItemOpen] = React.useState(false);\r\n  const handleClickOpen = () => {\r\n    setItemOpen(true);\r\n  };\r\n\r\n  // const endUserIncident = useSelector((state) => state.incidentReducers.endUserIncident)\r\n  useEffect(() => {\r\n    // setAffecteduser(endUserIncident.Email);\r\n  }, []);\r\n\r\n  const handleItemClose = () => {\r\n    setItemOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setAffecteduser(localStorage.getItem(\"userEmail\"));\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div style={{ overflowX: \"hidden\" }}>\r\n      <DraggableModal open={itemOpen} setOpen={setItemOpen} handleClickOpen={handleClickOpen} handleClose={handleItemClose} />\r\n      {!update ? <StepperComponent steps={[\"General Information\", \"Technical Information\", \"Submit Request\"]} /> : null}\r\n      {category === \"Reset password\" ? <>\r\n        <ContentDevider title={`${category} service`} />\r\n        <Grid container rowSpacing={1} sx={{ width: '100%', display: 'flex', alignItems: 'center' }} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\r\n          <Grid item xs={6}>\r\n            {/* <CmdbGridContainer show={[false,true,false,false]} dropdown={[false,true ]} name={[\"Affected account username\",\"Preffered contact method\"]} SelectedValue1={affectedUser} setSelectValue1={setAffecteduser} Name2={requesterName} setName2={setRequesterName}  SelectedValue2={preferedContact} setSelectValue2={setPreferedContact}  label={[\"Requested Date\",\"\"]} MenuItems={[Requestusers,contactMethod]}/> */}\r\n            <SelectField MenuItems={contactMethod} setSelectValue={setPreferedContact} SelectedValue={preferedContact} label={\"Preferred Contact method\"} />\r\n          </Grid>\r\n          <Grid item xs={5} style={{ marginLeft: 70 }}>\r\n            <SearchTextField placeholder={\"Affected Account\"} fieldValue={affectedUser} setFieldValue={setAffecteduser} search={true} handleClickOpen={handleClickOpen} open={itemOpen} style={{ marginTop: 12, width: \"100%\" }} />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {update &&\r\n          <CmdbGridContainer show={[true, true, false, false]} dropdown={[true, true]} name={[\"Priority\", \"Ticket Status\"]} Name1={priorityLevel} setName1={setPriorityLevel} Name2={requesterName} setName2={setRequesterName} SelectedValue1={priorityLevel} setSelectValue1={setPriorityLevel} SelectedValue2={approvalStatus} setSelectValue2={setApprovalStatus} label={[\"Requested Date\", \"\"]} MenuItems={[priorityStatus, requestState]} />}\r\n      </> : null}\r\n\r\n      {category === \"Access request\" ? <>\r\n        <ContentDevider title={`${category} servcie`} />\r\n        <CmdbGridContainer show={[true, true, false, false]} dropdown={[true, true]} name={[\"Requested access Service/System\", \"Need approval from\"]} SelectedValue1={requestAccess} setSelectValue1={setRequestAccess} Name2={requesterName} setName2={setRequesterName} SelectedValue2={approvalFrom} setSelectValue2={setApprovalFrom} label={[\"Requested Date\", \"\"]} MenuItems={[accessApplication, requestApprovers]} />\r\n\r\n        {update && <CmdbGridContainer show={[true, true, false, false]} dropdown={[true, true]} name={[\"Priority\", \"Approval status\"]} Name1={priorityLevel} setName1={setPriorityLevel} Name2={requesterName} setName2={setRequesterName} SelectedValue1={priorityLevel} setSelectValue1={setPriorityLevel} SelectedValue2={approvalStatus} setSelectValue2={setApprovalStatus} label={[\"Requested Date\", \"\"]} MenuItems={[priorityStatus, requestState]} />}\r\n\r\n        {update && <CmdbGridContainer show={[true, false, false, false]} dropdown={[true, true]} name={[\"User Role\", \"\"]} Name1={priorityLevel} setName1={setPriorityLevel} Name2={requesterName} setName2={setRequesterName} SelectedValue1={userRole} setSelectValue1={setUserRole} SelectedValue2={approvalStatus} setSelectValue2={setApprovalStatus} label={[\"Requested Date\", \"\"]} MenuItems={[userRoles, requestState]} />}\r\n\r\n      </> : null}\r\n      {category === \"Change request\" ? <>\r\n        <ContentDevider title={`${category} servcie`} />\r\n        <CmdbGridContainer show={[true, true, false, false]} dropdown={[true, true]} name={[\"Affected system Service/System\", \"CAB Approval status\"]} SelectedValue1={affectedService} setSelectValue1={setAffectedService} Name2={requesterName} setName2={setRequesterName} SelectedValue2={approvalStatus} setSelectValue2={setApprovalStatus} label={[\"Requested Date\", \"\"]} MenuItems={[affectedServices, requestState]} />\r\n\r\n        <CmdbGridContainer show={[true, false, true, false]} dropdown={[true, false]} name={[\"Priority\", \"Approval status\"]} Name1={priorityLevel} setName1={setPriorityLevel} Name2={requesterName} setName2={setRequesterName} SelectedValue1={priorityLevel} setSelectValue1={setPriorityLevel} SelectedValue2={approvalStatus} setSelectValue2={setApprovalStatus} Date1={changeDate} setDate1={setChangeDate} label={[\"Change date\", \"\"]} MenuItems={[priorityStatus, requestState]} />\r\n\r\n        <Grid container spacing={1} style={{ width: \"103%\", display: \"flex\", padding: 20, marginLeft: 10, justifyContent: \"center\", alignItems: \"center\" }}>\r\n          <Grid item xs={11} style={{ display: \"flex\" }}>\r\n            <TextField autofocus style={{ width: \"103%\" }} name={`Reason for ${category}`} label={`Backout Plan for ${category}`} type=\"text\" id={`Reason for ${category}`} value={backoutPlan} onChange={(e) => {\r\n              setBackoutPlan(e.target.value)\r\n            }} />\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </> : null}\r\n\r\n      <Grid container spacing={1} style={{ width: \"103%\", display: \"flex\", padding: 20, marginLeft: 10, justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <Grid item xs={11} style={{ display: \"flex\" }}>\r\n          <TextField autofocus style={{ width: \"100%\" }} name={`Reason for ${category}`} label={`Reason for ${category}`} type=\"text\" id={`Reason for ${category}`} value={reasonDescription} onChange={(e) => {\r\n            setReasonDescription(e.target.value)\r\n          }} />\r\n        </Grid>\r\n      </Grid>\r\n\r\n\r\n      <Stack style={{ display: 'flex', alignItems: \"center\", justifyContent: \"space-around\", paddingRight: 20, paddingTop: 50, paddingBottom: 30 }} direction=\"row\">\r\n        <Button variant=\"outlined\" color=\"warning\" style={{ width: 100 }} onClick={() => { }}>Back</Button>\r\n        <Button variant=\"contained\" color=\"primary\" style={{ width: 200 }} onClick={() => {\r\n          // !update ? createRequest() : updateRequest(); dispatch(setActiveStep(activeStep + 2));\r\n\r\n          if (localStorage.getItem(\"userEmail\") === \"user@teksiblegroup.com\") { navigate(\"/\") }\r\n        }}>{!update ? \"Create request\" : \"Update request\"}</Button>\r\n      </Stack>\r\n\r\n\r\n      {update ? <Box sx={{ width: '90%', typography: 'body1', marginTop: 10 }}>\r\n        <TabContext value={value}>\r\n          <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n            <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\r\n              <Tab label=\"Activity Bar\" value=\"1\" />\r\n            </TabList>\r\n          </Box>\r\n\r\n          <TabPanel value=\"1\">\r\n            <Stack style={{ display: 'flex', alignItems: \"center\", justifyContent: \"space-between\", paddingRight: 20, marginTop: 20 }} direction=\"row\">\r\n              <label style={{ display: 'block', color: \"grey\", marginLeft: 10, marginBottom: 10 }} htmlFor=\"textarea\">\r\n                Activity Notes :\r\n              </label>\r\n              <Button variant=\"contained\" color=\"secondary\" style={{ width: 130, fontSize: 12, marginBottom: 10 }} onClick={handleAddNote}>update notes</Button>\r\n            </Stack>\r\n            <TextareaAutosize aria-label=\"empty textarea\" minRows={5} placeholder=\"Enter the notes\" style={{ width: \"100%\", padding: 20 }} value={comment} onChange={(e) => { setComment(e.target.value) }} />\r\n\r\n            <Box style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", backgroundColor: \"#e6e6e6\", borderRadius: 10, paddingLeft: 10 }}>\r\n              {/* <div> */}\r\n              <h4 style={{ fontWeight: \"normal\", fontSize: 16 }}>Service request raised by <strong>{requesterName}</strong></h4>\r\n              {/* </div> */}\r\n              <h4 style={{ fontWeight: \"normal\", marginTop: -20, fontSize: 15 }}>created at <strong>{openedDate}</strong> </h4>\r\n            </Box>\r\n            <Box\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n                marginTop: 10\r\n              }}\r\n            >\r\n              {notes.map((note, index) => (\r\n                <div key={index} style={{\r\n                  backgroundColor: '#e6e6e6',\r\n                  borderRadius: 10,\r\n                  paddingLeft: 10, marginTop: 10\r\n                }}>\r\n                  <p style={{ fontWeight: 'normal', fontSize: 16 }}>{note.text}</p>\r\n                  <p style={{ fontWeight: 'normal', fontSize: 13 }}>Note updated by <strong>{note.createdBy}</strong></p>\r\n                  <p style={{ fontWeight: 'normal', fontSize: 13, marginTop: -10 }}>created at <strong>{note.timestamp}</strong></p>\r\n                </div>\r\n              ))}\r\n            </Box>\r\n          </TabPanel>\r\n        </TabContext>\r\n      </Box> : null}\r\n\r\n\r\n      <NotifyBar error={error} notifyMessage={notifyMessage} notifyStatus={notifyStatus} setNotifyStatus={setNotifyStatus} />\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACD,EAAE,CAACuC,YAAY,EAAE8B,aAAa,EAAEE,YAAY,EAAEE,QAAQ,EAAEI,UAAU,EAAEE,WAAW,EAAEE,cAAc,EAAEI,iBAAiB,EAAE9C,YAAY,EAAEc,eAAe,EAAEK,WAAW,EAAEX,aAAa,CAAC,CAAC;EAGhL,eAAe0D,aAAaA,CAAA,EAAG;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;EAMF,eAAeC,aAAaA,CAAA,EAAG;IAC7B,MAAMC,SAAS,GAAGpB,YAAY,CAACqB,GAAG,CAAC,QAAQ,CAAC;;IAE5C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;EAEA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG/G,QAAQ,CAAC,EAAE,CAAC;EAChD,eAAegH,gBAAgBA,CAACJ,SAAS,EAAE;IACzC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;EAGF3G,SAAS,CAAC,MAAM;IACd,IAAIuF,YAAY,CAACqB,GAAG,CAAC,QAAQ,CAAC,EAAE;MAC9BG,gBAAgB,CAACxB,YAAY,CAACqB,GAAG,CAAC,QAAQ,CAAC,CAAC;MAC5CxB,SAAS,CAAC,IAAI,CAAC;MACf4B,OAAO,CAACC,GAAG,CAAC,CAAC;IACf,CAAC,MAAM;MACL7B,SAAS,CAAC,KAAK,CAAC;IAClB;EACF,CAAC,EAAE,EAAE,CAAC;EAGNpF,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;I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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}