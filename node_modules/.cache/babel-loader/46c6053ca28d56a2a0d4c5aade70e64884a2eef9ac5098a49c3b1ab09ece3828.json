{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst getLocalStorageItem = key => {\n  if (typeof window !== \"undefined\") {\n    return localStorage.getItem(key) || \"\";\n  }\n  return \"\";\n};\nconst initialState = {\n  requestDetails: [],\n  requestService: {\n    requestNumber: \"\",\n    requestType: \"\",\n    approvalStatus: \"\",\n    requestState: \"\",\n    openedDate: \"\",\n    dueDate: \"\",\n    requestFor: getLocalStorageItem(\"userEmail\"),\n    openedBy: getLocalStorageItem(\"userEmail\"),\n    ShortDescription: \"\",\n    selectedItem: [],\n    createdBy: getLocalStorageItem(\"userEmail\")\n  },\n  requestGeneralService: {\n    requestNumber: \"\",\n    requestType: \"\",\n    requesterName: getLocalStorageItem(\"userEmail\"),\n    requesterEmail: \"\",\n    requesterServiceType: \"\",\n    affectedUser: \"\",\n    preferedContact: \"\",\n    priority: \"\",\n    approvalStatus: \"\",\n    reasonDescription: \"\",\n    requestAccess: \"\",\n    approvalFrom: \"\",\n    userRole: \"\",\n    affectedService: \"\",\n    changeDate: \"\",\n    backoutPlan: \"\",\n    changeApproval: \"\",\n    openedDate: \"\",\n    createdBy: localStorage.getItem(\"userEmail\")\n  },\n  updateRequestDetails: [],\n  selectedRequest: \"\"\n};\nexport const requestSlice = createSlice({\n  name: \"request\",\n  initialState,\n  reducers: {\n    setRequestDetails: (state, action) => {\n      // state.requestDetails = [...state.requestDetails, action.payload];\n      if (Array.isArray(action.payload)) {\n        state.requestDetails = [...state.requestDetails, ...action.payload];\n      } else {\n        state.requestDetails = [...state.requestDetails, action.payload];\n      }\n      console.log(state.requestDetails);\n    },\n    setRequestServiceData: (state, action) => {\n      state.requestService = action.payload;\n      console.log(state.requestService);\n    },\n    setRequestGeneralService: (state, action) => {\n      state.requestGeneralService = action.payload;\n    },\n    setSelectedRequest: (state, action) => {\n      state.selectedRequest = action.payload;\n    },\n    setUpdateRequestDetails: (state, action) => {\n      state.updateRequestDetails = action.payload;\n    }\n  }\n});\nexport const {\n  setRequestDetails,\n  setUpdateRequestDetails,\n  setSelectedRequest,\n  setRequestServiceData,\n  setRequestGeneralService\n} = requestSlice.actions;\nexport default requestSlice.reducer;","map":{"version":3,"names":["createSlice","getLocalStorageItem","key","window","localStorage","getItem","initialState","requestDetails","requestService","requestNumber","requestType","approvalStatus","requestState","openedDate","dueDate","requestFor","openedBy","ShortDescription","selectedItem","createdBy","requestGeneralService","requesterName","requesterEmail","requesterServiceType","affectedUser","preferedContact","priority","reasonDescription","requestAccess","approvalFrom","userRole","affectedService","changeDate","backoutPlan","changeApproval","updateRequestDetails","selectedRequest","requestSlice","name","reducers","setRequestDetails","state","action","Array","isArray","payload","console","log","setRequestServiceData","setRequestGeneralService","setSelectedRequest","setUpdateRequestDetails","actions","reducer"],"sources":["C:/Users/DELL/development_loc/itsm_frontend/src/Redux state management/Redux Slices/RequestSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst getLocalStorageItem = (key) => {\r\n  if (typeof window !== \"undefined\") {\r\n    return localStorage.getItem(key) || \"\";\r\n  }\r\n  return \"\";\r\n};\r\n\r\nconst initialState={\r\n    requestDetails:[],\r\n    requestService:{\r\n        requestNumber:\"\",\r\n        requestType:\"\",\r\n        approvalStatus:\"\",\r\n        requestState:\"\",\r\n        openedDate:\"\",\r\n        dueDate:\"\",\r\n        requestFor:getLocalStorageItem(\"userEmail\"),\r\n        openedBy:getLocalStorageItem(\"userEmail\"),\r\n        ShortDescription:\"\",\r\n        selectedItem:[],\r\n        createdBy:getLocalStorageItem(\"userEmail\")\r\n    },\r\n    requestGeneralService:{\r\n        requestNumber:\"\",\r\n        requestType:\"\",\r\n        requesterName:getLocalStorageItem(\"userEmail\"),\r\n        requesterEmail:\"\",\r\n        requesterServiceType:\"\",\r\n        affectedUser:\"\",\r\n        preferedContact:\"\",\r\n        priority:\"\",\r\n        approvalStatus:\"\",\r\n        reasonDescription:\"\",\r\n        requestAccess:\"\",\r\n        approvalFrom:\"\",\r\n        userRole:\"\",\r\n        affectedService:\"\",\r\n        changeDate:\"\",\r\n        backoutPlan:\"\",\r\n        changeApproval:\"\",\r\n        openedDate:\"\",\r\n        createdBy:localStorage.getItem(\"userEmail\")\r\n    },\r\n    updateRequestDetails:[],\r\n    selectedRequest:\"\"\r\n}\r\n\r\nexport const  requestSlice = createSlice(\r\n    {\r\n      name: \"request\",\r\n      initialState,\r\n      reducers: {\r\n        setRequestDetails: (state, action) => {\r\n          // state.requestDetails = [...state.requestDetails, action.payload];\r\n          if (Array.isArray(action.payload)) {\r\n            state.requestDetails = [\r\n              ...state.requestDetails,\r\n              ...action.payload,\r\n            ];\r\n          } else {\r\n            state.requestDetails = [\r\n              ...state.requestDetails,\r\n              action.payload,\r\n            ];\r\n          }\r\n          console.log(state.requestDetails)\r\n        },\r\n        setRequestServiceData: (state, action) => {\r\n          state.requestService = action.payload;\r\n          console.log(state.requestService)\r\n        },\r\n        setRequestGeneralService: (state, action) => {\r\n          state.requestGeneralService = action.payload;\r\n        },\r\n        setSelectedRequest: (state, action) => {\r\n          state.selectedRequest = action.payload;\r\n        },\r\n        setUpdateRequestDetails: (state, action) => {\r\n          state.updateRequestDetails = action.payload;\r\n        },\r\n      },\r\n    }\r\n)\r\n\r\nexport const  {setRequestDetails,setUpdateRequestDetails,setSelectedRequest,setRequestServiceData,setRequestGeneralService} = requestSlice.actions;\r\n\r\nexport default requestSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}