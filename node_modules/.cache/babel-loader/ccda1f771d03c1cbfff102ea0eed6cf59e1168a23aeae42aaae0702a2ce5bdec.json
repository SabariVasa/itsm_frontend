{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\development_loc\\\\itsm_frontend\\\\src\\\\Components\\\\Request Management\\\\CatelogueFlowFormDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Field } from \"formik\";\nimport { TextField, Checkbox, FormControlLabel, MenuItem, Autocomplete, FormControl } from \"@mui/material\";\nimport GlobalService from \"../../services/GlobalService\";\nimport { resturls } from \"../../global/utils/apiurls\";\nimport { useAuth } from \"../../application/modules/auth/hooks/useAuth\";\nimport { sharedStyles } from \"../../commonComponents/StyledComponents\";\nimport { useTheme } from \"../../global/commonComponents/ThemeContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CatelogueFlowFormDetails = props => {\n  _s();\n  const {\n    values,\n    handleChange,\n    setFieldValue\n  } = props;\n  const [showChangeRequestFields, setShowChangeRequestFields] = useState(false);\n  const [group, setGroup] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedValues, setSelectedValues] = useState();\n  const {\n    theme\n  } = useTheme();\n  const {\n    user_auth\n  } = useAuth();\n  const fetchGroupDetails = () => {\n    GlobalService.generalSelect(respData => {\n      const {\n        estatus,\n        emessage,\n        data\n      } = respData;\n      if (estatus && emessage) {\n        setGroup(data);\n      }\n    }, `${resturls.fetchGroups}/${user_auth.userId}`, {}, \"GET\");\n  };\n  const getAllUserDetails = () => {\n    GlobalService.generalSelect(respdata => {\n      setUsers(respdata);\n    }, resturls.getUserDetails, {}, \"GET\");\n  };\n  useEffect(() => {\n    fetchGroupDetails();\n    getAllUserDetails();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '2em'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n        multiple: true,\n        value: (values === null || values === void 0 ? void 0 : values.serviceRequestAccess) || [],\n        onChange: (event, value) => setFieldValue(\"serviceRequestAccess\", value),\n        options: group,\n        getOptionLabel: option => option.groupName || \"\",\n        isOptionEqualToValue: (option, value) => option.id === (value === null || value === void 0 ? void 0 : value.id),\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params,\n          label: \"Service Request Access\",\n          fullWidth: true,\n          disabled: !(group !== null && group !== void 0 && group.length),\n          sx: sharedStyles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        multiple: true,\n        value: values.srLandingAssignmentGroup || [],\n        onChange: (event, value) => setFieldValue(\"srLandingAssignmentGroup\", value),\n        options: users,\n        getOptionLabel: option => option.emailAddress || \"\",\n        isOptionEqualToValue: (option, value) => option.id === (value === null || value === void 0 ? void 0 : value.id),\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params,\n          label: \"SR Landing Assignment Group\",\n          fullWidth: true,\n          disabled: !(users !== null && users !== void 0 && users.length),\n          sx: sharedStyles,\n          style: {\n            marginTop: '0.7em'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: \"w-[50%]\",\n        component: \"fieldset\",\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '10px',\n            borderRadius: \"1em\",\n            padding: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              name: \"approvalRequired\",\n              checked: values.requiredField,\n              onChange: event => setFieldValue(\"approvalRequired\", event.target.checked) // Update Formik value\n              ,\n              sx: {\n                color: \"#ff7eb3\",\n                \"&.Mui-checked\": {\n                  color: `${theme.valueFontColor}`\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this),\n            label: \"Approval Required\",\n            sx: {\n              color: `${theme.valueFontColor}`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), values.approvalRequired && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"50%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n          multiple: true,\n          value: values.approversName || [],\n          onChange: (event, value) => setFieldValue(\"approversName\", value),\n          options: users,\n          getOptionLabel: option => option.emailAddress || \"\",\n          isOptionEqualToValue: (option, value) => option.id === (value === null || value === void 0 ? void 0 : value.id),\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"Approver(s) Name\",\n            fullWidth: true,\n            disabled: !(users !== null && users !== void 0 && users.length),\n            sx: sharedStyles,\n            style: {\n              marginTop: '0.7em'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"(or)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          multiple: true,\n          value: values.approvalAssignmentGroup || [],\n          onChange: (event, value) => {\n            setFieldValue(\"approvalAssignmentGroup\", value.map(item => item.id));\n            setSelectedValues(value.map(item => item.id));\n          },\n          options: group ? group.filter(item => !(selectedValues !== null && selectedValues !== void 0 && selectedValues.includes(item.id))) : [],\n          getOptionLabel: option => option.groupName || \"\",\n          isOptionEqualToValue: (option, value) => option.id === value.id,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"Approval Assignment Group\",\n            fullWidth: true,\n            disabled: !(group !== null && group !== void 0 && group.length),\n            sx: sharedStyles,\n            style: {\n              marginTop: '0.7em'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '10px',\n            borderRadius: \"1em\",\n            padding: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              name: \"createChangeRequest\",\n              checked: values.requiredField,\n              onChange: e => {\n                handleChange(e);\n                setShowChangeRequestFields(e.target.checked);\n              },\n              sx: {\n                color: \"#ff7eb3\",\n                \"&.Mui-checked\": {\n                  color: `${theme.valueFontColor}`\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this),\n            label: \"Create Change Request\",\n            sx: {\n              color: `${theme.valueFontColor}`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), showChangeRequestFields && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          as: Autocomplete,\n          name: \"changeRequestName\",\n          onChange: (event, value) => {\n            const selected = value.map(item => item.id);\n            setFieldValue(\"changeRequestName\", selected);\n          },\n          className: \"w-[50%]\",\n          options: users ? users.filter(item => {\n            var _values$srLandingAssi;\n            return !((_values$srLandingAssi = values.srLandingAssignmentGroup) !== null && _values$srLandingAssi !== void 0 && _values$srLandingAssi.includes(item.id));\n          }) : [],\n          getOptionLabel: option => option.emailAddress || \"\",\n          isOptionEqualToValue: (option, value) => option.id === value.id,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"Change Request Name\",\n            fullWidth: true,\n            disabled: !(users !== null && users !== void 0 && users.length),\n            sx: sharedStyles,\n            style: {\n              marginTop: '0.7em'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: TextField,\n          className: \"w-[50%]\",\n          name: \"changePriorityLevel\",\n          label: \"Change Priority Level\",\n          fullWidth: true,\n          sx: sharedStyles,\n          margin: \"normal\",\n          variant: \"outlined\",\n          select: true,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Low\",\n            children: \"Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"High\",\n            children: \"High\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: TextField,\n          className: \"w-[50%]\",\n          name: \"changeRequestDescription\",\n          label: \"Change Request Description\",\n          fullWidth: true,\n          sx: sharedStyles,\n          margin: \"normal\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(CatelogueFlowFormDetails, \"vKqQsSWgcmI1o6KfiYmepYNVWpk=\", false, function () {\n  return [useTheme, useAuth];\n});\n_c = CatelogueFlowFormDetails;\nexport default CatelogueFlowFormDetails;\nvar _c;\n$RefreshReg$(_c, \"CatelogueFlowFormDetails\");","map":{"version":3,"names":["React","useEffect","useState","Field","TextField","Checkbox","FormControlLabel","MenuItem","Autocomplete","FormControl","GlobalService","resturls","useAuth","sharedStyles","useTheme","jsxDEV","_jsxDEV","Fragment","_Fragment","CatelogueFlowFormDetails","props","_s","values","handleChange","setFieldValue","showChangeRequestFields","setShowChangeRequestFields","group","setGroup","users","setUsers","selectedValues","setSelectedValues","theme","user_auth","fetchGroupDetails","generalSelect","respData","estatus","emessage","data","fetchGroups","userId","getAllUserDetails","respdata","getUserDetails","style","marginTop","children","multiple","value","serviceRequestAccess","onChange","event","options","getOptionLabel","option","groupName","isOptionEqualToValue","id","renderInput","params","label","fullWidth","disabled","length","sx","fileName","_jsxFileName","lineNumber","columnNumber","srLandingAssignmentGroup","emailAddress","className","component","display","flexDirection","gap","borderRadius","padding","control","name","checked","requiredField","target","color","valueFontColor","approvalRequired","width","approversName","textAlign","approvalAssignmentGroup","map","item","filter","includes","e","as","selected","_values$srLandingAssi","margin","variant","select","justifyContent","_c","$RefreshReg$"],"sources":["C:/Users/DELL/development_loc/itsm_frontend/src/Components/Request Management/CatelogueFlowFormDetails.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Field } from \"formik\";\r\nimport {\r\n  TextField,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  MenuItem,\r\n  Autocomplete,\r\n  FormControl,\r\n} from \"@mui/material\";\r\nimport GlobalService from \"../../services/GlobalService\";\r\nimport { resturls } from \"../../global/utils/apiurls\";\r\nimport { useAuth } from \"../../application/modules/auth/hooks/useAuth\";\r\nimport { sharedStyles } from \"../../commonComponents/StyledComponents\";\r\nimport { useTheme } from \"../../global/commonComponents/ThemeContext\";\r\n\r\nconst CatelogueFlowFormDetails = (props) => {\r\n  const {\r\n    values,\r\n    handleChange,\r\n    setFieldValue\r\n  } = props\r\n  const [showChangeRequestFields, setShowChangeRequestFields] = useState(false);\r\n  const [group, setGroup] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedValues, setSelectedValues] = useState()\r\n  const { theme } = useTheme();\r\n  const { user_auth } = useAuth();\r\n\r\n  const fetchGroupDetails = () => {\r\n    GlobalService.generalSelect(\r\n      (respData) => {\r\n        const { estatus, emessage, data } = respData;\r\n        if (estatus && emessage) {\r\n          setGroup(data);\r\n        }\r\n      },\r\n      `${resturls.fetchGroups}/${user_auth.userId}`,\r\n      {},\r\n      \"GET\"\r\n    );\r\n  };\r\n\r\n  const getAllUserDetails = () => {\r\n    GlobalService.generalSelect(\r\n      (respdata) => {\r\n        setUsers(respdata);\r\n      },\r\n      resturls.getUserDetails,\r\n      {},\r\n      \"GET\"\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchGroupDetails();\r\n    getAllUserDetails();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ marginTop: '2em' }}>\r\n      <div>\r\n          <Autocomplete\r\n              multiple\r\n              value={values?.serviceRequestAccess || []}\r\n              onChange={(event, value) => setFieldValue(\"serviceRequestAccess\", value)}\r\n              options={group}\r\n              getOptionLabel={(option) => option.groupName || \"\"}\r\n              isOptionEqualToValue={(option, value) => option.id === value?.id}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Service Request Access\"\r\n                  fullWidth\r\n                  disabled={!group?.length}\r\n                  sx={sharedStyles}\r\n                />\r\n              )}\r\n          />\r\n          <Autocomplete\r\n              multiple\r\n              value={values.srLandingAssignmentGroup || []}\r\n              onChange={(event, value) => setFieldValue(\"srLandingAssignmentGroup\", value)}\r\n              options={users}\r\n              getOptionLabel={(option) => option.emailAddress || \"\"}\r\n              isOptionEqualToValue={(option, value) => option.id === value?.id}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"SR Landing Assignment Group\"\r\n                  fullWidth\r\n                  disabled={!users?.length}\r\n                  sx={sharedStyles}\r\n                  style={{ marginTop: '0.7em' }}\r\n                />\r\n              )}\r\n          />\r\n        <FormControl className=\"w-[50%]\" component=\"fieldset\" fullWidth>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              gap: '10px',\r\n              borderRadius: \"1em\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  name=\"approvalRequired\"\r\n                  checked={values.requiredField}\r\n                  onChange={(event) => setFieldValue(\"approvalRequired\", event.target.checked)} // Update Formik value\r\n                  sx={{\r\n                    color: \"#ff7eb3\",\r\n                    \"&.Mui-checked\": {\r\n                      color: `${theme.valueFontColor}`,\r\n                    },\r\n                  }}\r\n                />\r\n              }\r\n              label=\"Approval Required\"\r\n              sx={{\r\n                color: `${theme.valueFontColor}`,\r\n              }}\r\n            />\r\n          </div>\r\n        </FormControl>\r\n        {values.approvalRequired && (\r\n          <div style={{ width: \"50%\" }}>\r\n            <Autocomplete\r\n              multiple\r\n              value={values.approversName || []}\r\n              onChange={(event, value) => setFieldValue(\"approversName\", value)}\r\n              options={users}\r\n              getOptionLabel={(option) => option.emailAddress || \"\"}\r\n              isOptionEqualToValue={(option, value) => option.id === value?.id}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Approver(s) Name\"\r\n                  fullWidth\r\n                  disabled={!users?.length}\r\n                  sx={sharedStyles}\r\n                  style={{ marginTop: '0.7em' }}\r\n                />\r\n              )}\r\n            />\r\n            <div style={{ textAlign: 'center' }}>(or)</div>\r\n            <Autocomplete\r\n              multiple\r\n              value={values.approvalAssignmentGroup || []}\r\n              onChange={(event, value) => {\r\n                setFieldValue(\r\n                  \"approvalAssignmentGroup\",\r\n                  value.map((item) => item.id)\r\n                );\r\n                setSelectedValues(value.map((item) => item.id));\r\n              }}\r\n              options={group ? group.filter((item) => !selectedValues?.includes(item.id)) : []}\r\n              getOptionLabel={(option) => option.groupName || \"\"}\r\n              isOptionEqualToValue={(option, value) => option.id === value.id}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Approval Assignment Group\"\r\n                  fullWidth\r\n                  disabled={!group?.length}\r\n                  sx={sharedStyles}\r\n                  style={{ marginTop: '0.7em' }}\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n        )}\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              gap: '10px',\r\n              borderRadius: \"1em\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  name=\"createChangeRequest\"\r\n                  checked={values.requiredField}\r\n                  onChange={(e) => {\r\n                    handleChange(e);\r\n                    setShowChangeRequestFields(e.target.checked);\r\n                  }}\r\n                  sx={{\r\n                    color: \"#ff7eb3\",\r\n                    \"&.Mui-checked\": {\r\n                      color: `${theme.valueFontColor}`,\r\n                    },\r\n                  }}\r\n                />\r\n              }\r\n              label=\"Create Change Request\"\r\n              sx={{\r\n                color: `${theme.valueFontColor}`,\r\n              }}\r\n            />\r\n          </div>\r\n        </FormControl>\r\n        {showChangeRequestFields && (\r\n          <>\r\n                <Field\r\n                  as={Autocomplete}\r\n                  name=\"changeRequestName\"\r\n                  onChange={(event, value) => {\r\n                    const selected = value.map((item) => item.id);\r\n                    setFieldValue(\"changeRequestName\", selected);\r\n                  }}\r\n                  className=\"w-[50%]\"\r\n                  options={users ? users.filter((item) => !values.srLandingAssignmentGroup?.includes(item.id)) : []}\r\n                  getOptionLabel={(option) => option.emailAddress || \"\"}\r\n                  isOptionEqualToValue={(option, value) => option.id === value.id}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Change Request Name\"\r\n                      fullWidth\r\n                      disabled={!users?.length}\r\n                      sx={sharedStyles}\r\n                      style={{ marginTop: '0.7em' }}\r\n                    />\r\n                  )}\r\n                />\r\n                <Field\r\n                  as={TextField}\r\n                  className=\"w-[50%]\"\r\n                  name=\"changePriorityLevel\"\r\n                  label=\"Change Priority Level\"\r\n                  fullWidth\r\n                  sx={sharedStyles}\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  select\r\n                >\r\n                  <MenuItem value=\"Low\">Low</MenuItem>\r\n                  <MenuItem value=\"Medium\">Medium</MenuItem>\r\n                  <MenuItem value=\"High\">High</MenuItem>\r\n                </Field>\r\n                <Field\r\n                  as={TextField}\r\n                  className=\"w-[50%]\"\r\n                  name=\"changeRequestDescription\"\r\n                  label=\"Change Request Description\"\r\n                  fullWidth\r\n                  sx={sharedStyles}\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                />\r\n          </>\r\n        )}\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* <Button variant=\"contained\" color=\"secondary\" type=\"button\">\r\n                  Back\r\n                </Button> */}\r\n          {/* <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                  Next\r\n                </Button> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CatelogueFlowFormDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}